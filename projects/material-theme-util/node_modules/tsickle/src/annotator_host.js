/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("tsickle/src/annotator_host", ["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.moduleNameAsIdentifier = void 0;
    /**
     * Returns a mangled version of the module name (resolved file name) for source file.
     *
     * The mangled name is safe to use as a JavaScript identifier. It is used as a globally unique
     * prefix to scope symbols in externs file (see externs.ts).
     */
    function moduleNameAsIdentifier(host, fileName) {
        return host.pathToModuleName('', fileName).replace(/\./g, '$');
    }
    exports.moduleNameAsIdentifier = moduleNameAsIdentifier;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ub3RhdG9yX2hvc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYW5ub3RhdG9yX2hvc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HOzs7Ozs7Ozs7Ozs7O0lBZ0RIOzs7OztPQUtHO0lBQ0gsU0FBZ0Isc0JBQXNCLENBQUMsSUFBbUIsRUFBRSxRQUFnQjtRQUMxRSxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBRkQsd0RBRUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbmltcG9ydCAqIGFzIHRzIGZyb20gJ3R5cGVzY3JpcHQnO1xuXG4vKipcbiAqIEFubm90YXRvckhvc3QgY29udGFpbnMgaG9zdCBwcm9wZXJ0aWVzIGZvciB0aGUgSlNEb2MtYW5ub3RhdGlvbiBwcm9jZXNzLlxuICogSXQncyB1c2VkIGJ5IGEgYnVuY2ggb2YgZGlmZmVyZW50IHRzaWNrbGUgbW9kdWxlcywgaW5jbHVkaW5nIHRoZSB0eXBlXG4gKiB0cmFuc2xhdG9ycywgdGhlIGV4dGVybnMgZ2VuZXJhdG9yLCBhbmQgdGhlIG1haW4gSlNEb2MgdHJhbnNmb3JtZXIuXG4gKlxuICogQ29udHJhc3QgdGhpcyB3aXRoIHRoZSBHb29nTW9kdWxlUHJvY2Vzc29ySG9zdCwgdGhlIHNlcGFyYXRlIGhvc3QgdXNlZCBmb3JcbiAqIHRoZSBnb29nLm1vZHVsZSgpIHRyYW5zbGF0aW9uIHByb2Nlc3MuXG4gKlxuICogVE9ETyhldm1hcik6IGNvbnNpZGVyIGJyZWFraW5nIHRoaXMgaW50byBtb3JlIHNjb3BlZCBob3N0cyBmb3IgdGhlIGRpZmZlcmVudFxuICogbW9kdWxlcywgcmF0aGVyIHRoYW4gb25lIG1hc3NpdmUgbGlzdCBvZiBhbGwgcG9zc2libGUgbmVlZGVkIGZ1bmN0aW9uYWxpdHkuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQW5ub3RhdG9ySG9zdCB7XG4gIC8qKlxuICAgKiBJZiBwcm92aWRlZCBhIGZ1bmN0aW9uIHRoYXQgbG9ncyBhbiBpbnRlcm5hbCB3YXJuaW5nLlxuICAgKiBUaGVzZSB3YXJuaW5ncyBhcmUgbm90IGFjdGlvbmFibGUgYnkgYW4gZW5kIHVzZXIgYW5kIHNob3VsZCBiZSBoaWRkZW5cbiAgICogYnkgZGVmYXVsdC5cbiAgICovXG4gIGxvZ1dhcm5pbmc/OiAod2FybmluZzogdHMuRGlhZ25vc3RpYykgPT4gdm9pZDtcbiAgcGF0aFRvTW9kdWxlTmFtZTogKGNvbnRleHQ6IHN0cmluZywgaW1wb3J0UGF0aDogc3RyaW5nKSA9PiBzdHJpbmc7XG4gIC8qKlxuICAgKiBJZiB0cnVlLCBjb252ZXJ0IGV2ZXJ5IHR5cGUgdG8gdGhlIENsb3N1cmUgez99IHR5cGUsIHdoaWNoIG1lYW5zXG4gICAqIFwiZG9uJ3QgY2hlY2sgdHlwZXNcIi5cbiAgICovXG4gIHVudHlwZWQ/OiBib29sZWFuO1xuICAvKiogSWYgcHJvdmlkZWQsIGEgc2V0IG9mIHBhdGhzIHdob3NlIHR5cGVzIHNob3VsZCBhbHdheXMgZ2VuZXJhdGUgYXMgez99LiAqL1xuICB0eXBlQmxhY2tMaXN0UGF0aHM/OiBTZXQ8c3RyaW5nPjtcbiAgLyoqXG4gICAqIENvbnZlcnQgc2hvcnRoYW5kIFwiL2luZGV4XCIgaW1wb3J0cyB0byBmdWxsIHBhdGggKGluY2x1ZGUgdGhlIFwiL2luZGV4XCIpLlxuICAgKiBBbm5vdGF0aW9uIHdpbGwgYmUgc2xvd2VyIGJlY2F1c2UgZXZlcnkgaW1wb3J0IG11c3QgYmUgcmVzb2x2ZWQuXG4gICAqL1xuICBjb252ZXJ0SW5kZXhJbXBvcnRTaG9ydGhhbmQ/OiBib29sZWFuO1xuICAvKipcbiAgICogV2hldGhlciB0c2lja2xlIHNob3VsZCBpbnNlcnQgZ29vZy5wcm92aWRlKCkgY2FsbHMgaW50byB0aGUgZXh0ZXJucyBnZW5lcmF0ZWQgZm9yIGAuZC50c2AgZmlsZXNcbiAgICogdGhhdCBhcmUgZXh0ZXJuYWwgbW9kdWxlcy5cbiAgICovXG4gIHByb3ZpZGVFeHRlcm5hbE1vZHVsZUR0c05hbWVzcGFjZT86IGJvb2xlYW47XG5cbiAgLyoqIFVzZWQgcmVzb2x2aW5nIGZpbGUgbmFtZXMgdG8gbW9kdWxlcy4gKi9cbiAgbW9kdWxlUmVzb2x1dGlvbkhvc3Q6IHRzLk1vZHVsZVJlc29sdXRpb25Ib3N0O1xuXG4gIC8qKiBVc2VkIHRvZ2V0aGVyIHdpdGggdGhlIGhvc3QgZm9yIGZpbGUgbmFtZSAtPiBtb2R1bGUgbmFtZSByZXNvbHV0aW9uLiAqL1xuICBvcHRpb25zOiB0cy5Db21waWxlck9wdGlvbnM7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIG1hbmdsZWQgdmVyc2lvbiBvZiB0aGUgbW9kdWxlIG5hbWUgKHJlc29sdmVkIGZpbGUgbmFtZSkgZm9yIHNvdXJjZSBmaWxlLlxuICpcbiAqIFRoZSBtYW5nbGVkIG5hbWUgaXMgc2FmZSB0byB1c2UgYXMgYSBKYXZhU2NyaXB0IGlkZW50aWZpZXIuIEl0IGlzIHVzZWQgYXMgYSBnbG9iYWxseSB1bmlxdWVcbiAqIHByZWZpeCB0byBzY29wZSBzeW1ib2xzIGluIGV4dGVybnMgZmlsZSAoc2VlIGV4dGVybnMudHMpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbW9kdWxlTmFtZUFzSWRlbnRpZmllcihob3N0OiBBbm5vdGF0b3JIb3N0LCBmaWxlTmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIGhvc3QucGF0aFRvTW9kdWxlTmFtZSgnJywgZmlsZU5hbWUpLnJlcGxhY2UoL1xcLi9nLCAnJCcpO1xufVxuIl19