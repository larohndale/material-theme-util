{"version":3,"sources":["./src/app/app.component.css","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./dist/material-theme-util/fesm2015/material-theme-util.js","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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AE,GAAG,EAAE,GAAG;AACpC,CAAC;AACD;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,yBAAyB,MAAM;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EA0FV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,wBAAwB,EAAE;AAC1B;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,6EAA6E,SAAS,EAAE;AACxF;AACA;AACA,oFAAoF,SAAS,EAAE;AAC/F;AACA;AACA,mFAAmF,SAAS,EAAE;AAC9F;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EA8BV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EA+BV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA,4CAA4C,wEAAkB,EAAE,+CAA+C,+BAA+B,EAAE,+CAA+C;AAC/L,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B;AAC3B;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iCAAiC,gEAAiB;AAClD,qCAAqC,gEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,mDAAK,wBAAwB;AACrD;AACA,WAAW,EAeV;AACD,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,iDAAiD,IAAI,EAAE,IAAI;AAC3D;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,4BAA4B,GAAG,EAAE,GAAG,EAAE,GAAG;AACzC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sBAAsB,SAAS,IAAI,WAAW,IAAI,UAAU;AAC5D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAA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","file":"main-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi9zcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from \"@angular/core\";\nimport { ThemeUtilService } from \"../../dist/material-theme-util\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  theme = {\n    primary: \"#5D5D5D\",\n    accent: \"#d3d3d3\",\n    warn: \"#ff0000\",\n  };\n\n  constructor(private themeUtil: ThemeUtilService) {\n    this.themeUtil.initTheme(\n      this.theme.primary,\n      this.theme.accent,\n      this.theme.warn\n    );\n  }\n\n  updatePrimary() {\n    this.themeUtil.setPrimaryPalette(this.theme.primary);\n  }\n\n  updateAccent() {\n    this.themeUtil.setAccentPalette(this.theme.accent);\n  }\n\n  updateWarn() {\n    this.themeUtil.setWarnPalette(this.theme.warn);\n  }\n}\n","export default \"<div #THEME_CONTAINER>\\n  <mat-toolbar color=\\\"primary\\\"> PRIMARY! </mat-toolbar>\\n  <mat-toolbar color=\\\"accent\\\"> ACCENT! </mat-toolbar>\\n  <mat-toolbar color=\\\"warn\\\"> WARN! </mat-toolbar>\\n\\n  <section class=\\\"margin1\\\">\\n    <div class=\\\"mat-h1\\\">\\n      Built-in Color Pickers\\n    </div>\\n    <mat-palette-picker [(ngModel)]=\\\"theme\\\"></mat-palette-picker>\\n  </section>\\n\\n  <section class=\\\"margin1\\\">\\n    <div class=\\\"mat-h1\\\">\\n      Client Defined Pickers\\n    </div>\\n    <div>\\n      <input type=\\\"color\\\" #pPicker (change)=\\\"theme.primary = pPicker.value; updatePrimary()\\\" [value]=\\\"theme.primary\\\" />\\n      {{ theme.primary }}\\n    </div>\\n    <div>\\n      <input type=\\\"color\\\" #aPicker (change)=\\\"theme.accent = aPicker.value; updateAccent()\\\" [value]=\\\"theme.accent\\\" />\\n      {{ theme.accent }}\\n    </div>\\n    <div>\\n      <input type=\\\"color\\\" #wPicker (change)=\\\"theme.warn = wPicker.value; updateWarn()\\\" [value]=\\\"theme.warn\\\" />\\n      {{ theme.warn }}\\n    </div>\\n  </section>\\n</div>\\n\";","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\nimport {\n  ThemeUtilModule,\n  ThemeUtilService,\n} from \"../../dist/material-theme-util\";\nimport { FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    ThemeUtilModule,\n    MatToolbarModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    FormsModule,\n  ],\n  providers: [ThemeUtilService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable, ɵɵdefineInjectable, Component, forwardRef, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: globalizer/color-models/color-format.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Hex {\n    /**\n     * @param {?} str\n     */\n    constructor(str) {\n        this.str = str;\n    }\n    /**\n     * @return {?}\n     */\n    parse() {\n        return this.str;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Hex.prototype.str;\n}\nclass HSL {\n    /**\n     * @param {?=} h\n     * @param {?=} s\n     * @param {?=} l\n     */\n    constructor(h, s, l) {\n        this.h = h;\n        this.s = s;\n        this.l = l;\n    }\n    /**\n     * @return {?}\n     */\n    parse() {\n        return `hsl(${this.h}, ${this.s}, ${this.l})`;\n    }\n}\nif (false) {\n    /** @type {?} */\n    HSL.prototype.h;\n    /** @type {?} */\n    HSL.prototype.s;\n    /** @type {?} */\n    HSL.prototype.l;\n}\nclass RGB {\n    /**\n     * @param {?=} r\n     * @param {?=} g\n     * @param {?=} b\n     */\n    constructor(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    /**\n     * @return {?}\n     */\n    parse() {\n        return `rgb(${this.r}, ${this.g}, ${this.b})`;\n    }\n}\nif (false) {\n    /** @type {?} */\n    RGB.prototype.r;\n    /** @type {?} */\n    RGB.prototype.g;\n    /** @type {?} */\n    RGB.prototype.b;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: globalizer/color-models/formater.util.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst REGEX = {\n    HEX: {\n        PARSE: /^#?([a-fA-F0-9]{1,2})([a-fA-F0-9]{1,2})([a-fA-F0-9]{1,2})$/i,\n        TEST: `^#?(([a-fA-F0-9]{2}){3}|([a-fA-F0-9]{1}){3})$`\n    }\n}\n/*\nRGB Utilities\n=====================================================\n=====================================================\n*/\n;\n/*\nRGB Utilities\n=====================================================\n=====================================================\n*/\n/** @type {?} */\nconst rgb2Hex = (/**\n * @param {?} rgb\n * @return {?}\n */\n(rgb) => {\n    /** @type {?} */\n    const parseHex = (/**\n     * @param {?} v\n     * @return {?}\n     */\n    v => {\n        /** @type {?} */\n        const hex = v.toString(16);\n        return hex.length === 1 ? `0${hex}` : hex;\n    });\n    /** @type {?} */\n    const _r = parseHex(rgb.r);\n    /** @type {?} */\n    const _g = parseHex(rgb.g);\n    /** @type {?} */\n    const _b = parseHex(rgb.b);\n    return new Hex(`#${_r}${_g}${_b}`);\n});\nconst ɵ0 = rgb2Hex;\n/** @type {?} */\nconst rgb2Hsl = (/**\n * @param {?} rgb\n * @return {?}\n */\n(rgb) => {\n    /** @type {?} */\n    let h = 0;\n    /** @type {?} */\n    let s = 0;\n    /** @type {?} */\n    let l = 0;\n    // Make r, g, and b fractions of 1\n    /** @type {?} */\n    const _r = (rgb.r /= 255);\n    /** @type {?} */\n    const _g = (rgb.g /= 255);\n    /** @type {?} */\n    const _b = (rgb.b /= 255);\n    // Find greatest and smallest channel values\n    /** @type {?} */\n    const cmin = Math.min(_r, _g, _b);\n    /** @type {?} */\n    const cmax = Math.max(_r, _g, _b);\n    /** @type {?} */\n    const delta = cmax - cmin;\n    if (delta == 0)\n        h = 0;\n    // Red is max\n    else if (cmax == _r)\n        h = ((_g - _b) / delta) % 6;\n    // Green is max\n    else if (cmax == _g)\n        h = (_b - _r) / delta + 2;\n    // Blue is max\n    else\n        h = (_r - _g) / delta + 4;\n    h = Math.round(h * 60);\n    // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n    // Calculate saturation\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n    return new HSL(h, s, l);\n});\nconst ɵ1 = rgb2Hsl;\n/** @type {?} */\nconst ParseRGB = {\n    HEX: rgb2Hex,\n    HSL: rgb2Hsl\n};\n/*\nHEX Utilities\n=====================================================\n=====================================================\n*/\n/** @type {?} */\nconst hex2RGB = (/**\n * @param {?} hex\n * @return {?}\n */\n(hex) => {\n    /** @type {?} */\n    let r;\n    /** @type {?} */\n    let g;\n    /** @type {?} */\n    let b;\n    /** @type {?} */\n    const result = REGEX.HEX.PARSE.exec(hex.parse());\n    if (!!result) {\n        r = parseInt(result[1], 16);\n        g = parseInt(result[2], 16);\n        b = parseInt(result[3], 16);\n    }\n    return new RGB(r, g, b);\n});\nconst ɵ2 = hex2RGB;\n/** @type {?} */\nconst hex2Hsl = (/**\n * @param {?} hex\n * @return {?}\n */\n(hex) => {\n    /** @type {?} */\n    const rgb = hex2RGB(hex);\n    return ParseRGB.HSL(rgb);\n});\nconst ɵ3 = hex2Hsl;\n/** @type {?} */\nconst testHex = (/**\n * @param {?} str\n * @return {?}\n */\nstr => {\n    return new RegExp(REGEX.HEX.TEST).test(str);\n});\nconst ɵ4 = testHex;\n/** @type {?} */\nconst ParseHEX = {\n    RGB: hex2RGB,\n    HSL: hex2Hsl,\n    TEST: testHex\n};\n/*\nHSL Utilities\n=====================================================\n=====================================================\n*/\n/** @type {?} */\nconst hsl2RGB = (/**\n * @param {?} hsl\n * @return {?}\n */\n(hsl) => {\n    // Must be fractions of 1\n    /** @type {?} */\n    const h = hsl.h;\n    /** @type {?} */\n    const s = hsl.s / 100;\n    /** @type {?} */\n    const l = hsl.l / 100;\n    /** @type {?} */\n    const c = (1 - Math.abs(2 * l - 1)) * s;\n    /** @type {?} */\n    const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    /** @type {?} */\n    const m = l - c / 2;\n    /** @type {?} */\n    let r = 0;\n    /** @type {?} */\n    let g = 0;\n    /** @type {?} */\n    let b = 0;\n    if (0 <= h && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    }\n    else if (60 <= h && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    }\n    else if (120 <= h && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    }\n    else if (180 <= h && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    }\n    else if (240 <= h && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    }\n    else if (300 <= h && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n    return new RGB(r, g, b);\n});\nconst ɵ5 = hsl2RGB;\n/** @type {?} */\nconst hsl2Hex = (/**\n * @param {?} hsl\n * @return {?}\n */\n(hsl) => {\n    /** @type {?} */\n    const rgb = hsl2RGB(hsl);\n    return ParseRGB.HEX(rgb);\n});\nconst ɵ6 = hsl2Hex;\n/** @type {?} */\nconst ParseHSL = {\n    RGB: hsl2RGB,\n    HEX: hsl2Hex\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: globalizer/color-models/color.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst ColorType = {\n    PRIMARY: \"P\",\n    ACCENT: \"A\",\n    WARN: \"W\",\n};\n/** @enum {string} */\nconst ColorFormat = {\n    HEX: \"HEX\",\n    RGB: \"RGB\",\n    HSL: \"HSL\",\n};\nclass Color {\n    /**\n     * @param {?} val\n     */\n    constructor(val) {\n        if (!(val instanceof Hex) &&\n            !(val instanceof RGB) &&\n            !(val instanceof HSL)) {\n            this.parseStr(val);\n        }\n        else {\n            this.set(val);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get RGB() {\n        return this._rgb;\n    }\n    /**\n     * @return {?}\n     */\n    get HEX() {\n        return this._hex;\n    }\n    /**\n     * @return {?}\n     */\n    get HSL() {\n        return this._hsl;\n    }\n    /**\n     * @param {?=} type\n     * @return {?}\n     */\n    get(type = ColorFormat.HEX) {\n        if (type === ColorFormat.HEX) {\n            return this.HEX;\n        }\n        else if (type === ColorFormat.RGB) {\n            return this.RGB;\n        }\n        else if (type === ColorFormat.HSL) {\n            return this.HSL;\n        }\n        else {\n            throw `Invalid type for color.`;\n        }\n    }\n    /**\n     * @param {?=} type\n     * @return {?}\n     */\n    toStr(type = ColorFormat.HEX) {\n        if (type === ColorFormat.HEX) {\n            return this.HEX.parse();\n        }\n        else if (type === ColorFormat.RGB) {\n            return this.RGB.parse();\n        }\n        else if (type === ColorFormat.HSL) {\n            return this.HSL.parse();\n        }\n        else {\n            throw `Invalid type for color.`;\n        }\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    parseStr(str) {\n        /** @type {?} */\n        const validHex = ParseHEX.TEST(str);\n        /** @type {?} */\n        let _color;\n        if (validHex) {\n            _color = new Hex(str);\n        }\n        this.set(_color);\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set(val) {\n        if (val instanceof Hex) {\n            this._hex = val;\n            this._rgb = ParseHEX.RGB(val);\n            this._hsl = ParseHEX.HSL(val);\n        }\n        else if (val instanceof RGB) {\n            this._hex = ParseRGB.HEX(val);\n            this._rgb = val;\n            this._hsl = ParseRGB.HSL(val);\n        }\n        else if (val instanceof HSL) {\n            this._hex = ParseHSL.HEX(val);\n            this._rgb = ParseHSL.RGB(val);\n            this._hsl = val;\n        }\n        else {\n            throw `Invalid input format for color.`;\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    Color.prototype._hex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    Color.prototype._rgb;\n    /**\n     * @type {?}\n     * @protected\n     */\n    Color.prototype._hsl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: globalizer/color-models/palette.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst PaletteType = {\n    P: \"PRIMARY\",\n    A: \"ACCENT\",\n    W: \"WARN\",\n};\n/**\n * @template T\n */\nclass HueMap {\n}\nif (false) {\n    /** @type {?} */\n    HueMap.prototype.ref;\n    /** @type {?} */\n    HueMap.prototype.value;\n}\nclass PaletteModel {\n    /**\n     * @param {?} colorMap\n     * @param {?=} type\n     */\n    constructor(colorMap, type) {\n        this.colorMap = colorMap;\n        this.type = type;\n        this.themeContainer = document.querySelector(\"body\");\n        // Assigns the value of the palette based on the\n        // format and palette type (Primary, accent, warn)\n        // @TODO Make the contrast more dynamic\n        this.assignPalette = (/**\n         * @param {?=} format\n         * @return {?}\n         */\n        (format = ColorFormat.HEX) => {\n            /** @type {?} */\n            const t = this.paletteType;\n            /** @type {?} */\n            const themeEl = this.themeContainer;\n            if (!!themeEl) {\n                themeEl.style.setProperty(`--${t}-50`, this._50.toStr(format));\n                themeEl.style.setProperty(`--${t}-100`, this._100.toStr(format));\n                themeEl.style.setProperty(`--${t}-200`, this._200.toStr(format));\n                themeEl.style.setProperty(`--${t}-300`, this._300.toStr(format));\n                themeEl.style.setProperty(`--${t}-400`, this._400.toStr(format));\n                themeEl.style.setProperty(`--${t}-500`, this._500.toStr(format));\n                themeEl.style.setProperty(`--${t}-600`, this._600.toStr(format));\n                themeEl.style.setProperty(`--${t}-700`, this._700.toStr(format));\n                themeEl.style.setProperty(`--${t}-800`, this._800.toStr(format));\n                themeEl.style.setProperty(`--${t}-900`, this._900.toStr(format));\n                themeEl.style.setProperty(`--${t}-A100`, this._A100.toStr(format));\n                themeEl.style.setProperty(`--${t}-A200`, this._A200.toStr(format));\n                themeEl.style.setProperty(`--${t}-A400`, this._A400.toStr(format));\n                themeEl.style.setProperty(`--${t}-A700`, this._A700.toStr(format));\n            }\n            else {\n                throw `No body element found!`;\n            }\n        });\n        // Sets Palette type (Primary/accent/warn)\n        // if it exists\n        if (!!this.type) {\n            this.paletteType = type;\n        }\n        else {\n            throw `No Palette type has been set.`;\n        }\n        // Sets ColorMap (Primary/accent/warn)\n        // if it exists\n        if (!!this.colorMap && this.colorMap.length > 0) {\n            this.colorMap.map((/**\n             * @param {?} v\n             * @return {?}\n             */\n            (v) => {\n                this[`_${v.ref}`] = v.value;\n            }));\n        }\n        else {\n            throw `Palette could not be generated.`;\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    PaletteModel.prototype.themeContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype.paletteType;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._50;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._100;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._200;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._300;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._400;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._500;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._600;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._700;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._800;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._900;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._A100;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._A200;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._A400;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype._A700;\n    /** @type {?} */\n    PaletteModel.prototype.assignPalette;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype.colorMap;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaletteModel.prototype.type;\n}\nclass Palette {\n    /**\n     * @param {?} color\n     * @param {?} type\n     */\n    constructor(color, type) {\n        this.color = color;\n        this.type = type;\n        this.buildPalette = (/**\n         * @return {?}\n         */\n        () => {\n            return this.generatePalette(this.color);\n        });\n        /*\n           Generates a color palette given a single color.\n        \n           1. Color is parsed to HSL format\n           2. Light (HS{L}) is altered for each Palette color\n           3. Palette is generated with Color Objects (allowing for use in any color format)\n        \n          */\n        this.generatePalette = (/**\n         * @param {?} color\n         * @return {?}\n         */\n        (color) => {\n            /** @type {?} */\n            const _color = color.HSL;\n            /** @type {?} */\n            const h = Math.round(_color.h);\n            /** @type {?} */\n            const s = Math.round(_color.s);\n            /** @type {?} */\n            const l = Math.round(_color.l);\n            if (isNaN(h) || isNaN(s) || isNaN(l)) {\n                throw new TypeError(\"Invalid input\");\n            }\n            if (h < 0 || h > 360) {\n                throw new RangeError(`Hue must be an integer within [0, 360]; given ${h}%`);\n            }\n            if (s < 0 || s > 100) {\n                throw new RangeError(`Saturation must be an integer within [0, 100]; given ${s}%`);\n            }\n            if (l < 0 || l > 100) {\n                throw new RangeError(`Lightness must be an integer within [0, 100]; given ${l}`);\n            }\n            /** @type {?} */\n            const hueMapset = this.generateAlterations(l).map((/**\n             * @param {?} map\n             * @return {?}\n             */\n            (map) => {\n                /** @type {?} */\n                const _color = new Color(new HSL(h, s, map.value));\n                return {\n                    ref: map.ref,\n                    value: _color,\n                };\n            }));\n            return new PaletteModel(hueMapset, this.type);\n        });\n        // Generates color palette based on the formula\n        // provided by @leodido (https://github.com/leodido/material-palette)\n        this.minimax = (/**\n         * @param {?} val\n         * @return {?}\n         */\n        (val) => Math.min(100, Math.max(0, val)));\n        this.generateAlterations = (/**\n         * @param {?} l\n         * @return {?}\n         */\n        (l) => [\n            {\n                ref: \"50\",\n                value: this.minimax(l + 52),\n            },\n            {\n                ref: \"100\",\n                value: this.minimax(l + 37),\n            },\n            {\n                ref: \"200\",\n                value: this.minimax(l + 26),\n            },\n            {\n                ref: \"300\",\n                value: this.minimax(l + 12),\n            },\n            {\n                ref: \"400\",\n                value: this.minimax(l + 6),\n            },\n            {\n                ref: \"500\",\n                value: l,\n            },\n            {\n                ref: \"600\",\n                value: this.minimax(l - 6),\n            },\n            {\n                ref: \"700\",\n                value: this.minimax(l - 12),\n            },\n            {\n                ref: \"800\",\n                value: this.minimax(l - 18),\n            },\n            {\n                ref: \"900\",\n                value: this.minimax(l - 24),\n            },\n            {\n                ref: \"A100\",\n                value: this.minimax(l + 24),\n            },\n            {\n                ref: \"A200\",\n                value: this.minimax(l + 16),\n            },\n            {\n                ref: \"A400\",\n                value: this.minimax(l - 1),\n            },\n            {\n                ref: \"A700\",\n                value: this.minimax(l - 12),\n            },\n        ]);\n    }\n}\nif (false) {\n    /** @type {?} */\n    Palette.prototype.palette;\n    /** @type {?} */\n    Palette.prototype.buildPalette;\n    /**\n     * @type {?}\n     * @private\n     */\n    Palette.prototype.generatePalette;\n    /**\n     * @type {?}\n     * @private\n     */\n    Palette.prototype.minimax;\n    /**\n     * @type {?}\n     * @private\n     */\n    Palette.prototype.generateAlterations;\n    /**\n     * @type {?}\n     * @private\n     */\n    Palette.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    Palette.prototype.type;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: globalizer/theme-utils/theme.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst DEFAULT_THEME = {\n    PRIMARY: \"#023057\",\n    ACCENT: \"#c1c5c8\",\n    WARN: \"#ff0000\",\n};\n// Color Theme Class for updating,\n// managing the theme style\nclass Theme {\n    /**\n     * @param {?=} p\n     * @param {?=} a\n     * @param {?=} w\n     */\n    constructor(p, a, w) {\n        this.p = p;\n        this.a = a;\n        this.w = w;\n        this.setPrimary(p);\n        this.setAccent(a);\n        this.setWarn(w);\n    }\n    /**\n     * @param {?=} color\n     * @return {?}\n     */\n    setPrimary(color = DEFAULT_THEME.PRIMARY) {\n        this.primary = new Color(color);\n        this.buildPalette(this.primary, ColorType.PRIMARY);\n    }\n    /**\n     * @param {?=} color\n     * @return {?}\n     */\n    setAccent(color = DEFAULT_THEME.ACCENT) {\n        this.accent = new Color(color);\n        this.buildPalette(this.accent, ColorType.ACCENT);\n    }\n    /**\n     * @param {?=} color\n     * @return {?}\n     */\n    setWarn(color = DEFAULT_THEME.WARN) {\n        this.warn = new Color(color);\n        this.buildPalette(this.warn, ColorType.WARN);\n    }\n    /**\n     * @private\n     * @param {?} color\n     * @param {?} type\n     * @return {?}\n     */\n    buildPalette(color, type) {\n        new Palette(color, type).buildPalette().assignPalette();\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Theme.prototype.primary;\n    /**\n     * @type {?}\n     * @private\n     */\n    Theme.prototype.accent;\n    /**\n     * @type {?}\n     * @private\n     */\n    Theme.prototype.warn;\n    /**\n     * @type {?}\n     * @private\n     */\n    Theme.prototype.p;\n    /**\n     * @type {?}\n     * @private\n     */\n    Theme.prototype.a;\n    /**\n     * @type {?}\n     * @private\n     */\n    Theme.prototype.w;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/theme-util.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ThemeUtilService {\n    /**\n     * @param {?=} primary\n     * @param {?=} accent\n     * @param {?=} warn\n     * @return {?}\n     */\n    initTheme(primary, accent, warn) {\n        this.colorTheme = new Theme(primary, accent, warn);\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    setPrimaryPalette(str) {\n        this.colorTheme.setPrimary(str);\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    setAccentPalette(str) {\n        this.colorTheme.setAccent(str);\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    setWarnPalette(str) {\n        this.colorTheme.setWarn(str);\n    }\n}\nThemeUtilService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: \"root\"\n            },] }\n];\n/** @nocollapse */ ThemeUtilService.ɵprov = ɵɵdefineInjectable({ factory: function ThemeUtilService_Factory() { return new ThemeUtilService(); }, token: ThemeUtilService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ThemeUtilService.prototype.colorTheme;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/palette-picker.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PalettePickerComponent {\n    /**\n     * @param {?} theme\n     */\n    constructor(theme) {\n        this.theme = theme;\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this.themeStr();\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (!!v && v !== this.themeStr()) {\n            this.writeValue(v);\n            this.chgFn(v);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get primary() {\n        return this._primary;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    set primary(str) {\n        this._primary = str;\n        this.theme.setPrimaryPalette(str);\n        this.updateTheme();\n    }\n    /**\n     * @return {?}\n     */\n    get accent() {\n        return this._accent;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    set accent(str) {\n        this._accent = str;\n        this.theme.setAccentPalette(str);\n        this.updateTheme();\n    }\n    /**\n     * @return {?}\n     */\n    get warn() {\n        return this._warn;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    set warn(str) {\n        this._warn = str;\n        this.theme.setWarnPalette(str);\n        this.updateTheme();\n    }\n    /**\n     * @return {?}\n     */\n    updateTheme() {\n        this.chgFn(this.themeStr());\n    }\n    /**\n     * @return {?}\n     */\n    themeStr() {\n        /** @type {?} */\n        const theme = {\n            primary: this._primary,\n            accent: this._accent,\n            warn: this._warn\n        };\n        return new BaseTheme(theme);\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    writeValue(str) {\n        this.isObjectInput = typeof str === \"object\";\n        /** @type {?} */\n        const theme = new BaseTheme(str);\n        this._primary = theme.primary;\n        this._accent = theme.accent;\n        this._warn = theme.warn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        // Intercept the chgFn to return the type received initially\n        this.chgFn = (/**\n         * @param {?} val\n         * @return {?}\n         */\n        val => {\n            /** @type {?} */\n            const obj = this.isObjectInput ? val : JSON.stringify(val);\n            fn(obj);\n        });\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { }\n    /**\n     * @return {?}\n     */\n    get colorCode() {\n        return this._colorCode;\n    }\n}\nPalettePickerComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"mat-palette-picker\",\n                template: \"<div class=\\\"col3-xl col3-lg col3-md col2-sm col2-xs\\\">\\n  <app-color-picker\\n    paletteType=\\\"Primary\\\"\\n    [(ngModel)]=\\\"primary\\\"\\n  ></app-color-picker>\\n  <app-color-picker\\n    paletteType=\\\"Accent\\\"\\n    [(ngModel)]=\\\"accent\\\"\\n  ></app-color-picker>\\n  <app-color-picker paletteType=\\\"Warn\\\" [(ngModel)]=\\\"warn\\\"></app-color-picker>\\n</div>\\n\",\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => PalettePickerComponent)),\n                        multi: true\n                    }\n                ]\n            }] }\n];\n/** @nocollapse */\nPalettePickerComponent.ctorParameters = () => [\n    { type: ThemeUtilService }\n];\nPalettePickerComponent.propDecorators = {\n    colorCode: [{ type: Input, args: [\"colorCode\",] }]\n};\nif (false) {\n    /** @type {?} */\n    PalettePickerComponent.prototype.isObjectInput;\n    /** @type {?} */\n    PalettePickerComponent.prototype.chgFn;\n    /** @type {?} */\n    PalettePickerComponent.prototype._primary;\n    /** @type {?} */\n    PalettePickerComponent.prototype._accent;\n    /** @type {?} */\n    PalettePickerComponent.prototype._warn;\n    /** @type {?} */\n    PalettePickerComponent.prototype._colorCode;\n    /** @type {?} */\n    PalettePickerComponent.prototype.theme;\n}\n/** @enum {string} */\nconst DEFAULT = {\n    P: \"#D3D3D3\",\n    A: \"#5D5D5D\",\n    W: \"#ff0000\",\n};\nclass BaseTheme {\n    /**\n     * @param {?} obj\n     */\n    constructor(obj) {\n        this.primary = DEFAULT.P;\n        this.accent = DEFAULT.A;\n        this.warn = DEFAULT.W;\n        if (!!obj) {\n            if (typeof obj === \"string\") {\n                this.parseObj(JSON.parse(obj));\n            }\n            else {\n                this.parseObj(obj);\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} obj\n     * @return {?}\n     */\n    parseObj(obj) {\n        if (!!obj) {\n            this.primary = obj.primary ? obj.primary : DEFAULT.P;\n            this.accent = obj.accent ? obj.accent : DEFAULT.A;\n            this.warn = obj.warn ? obj.warn : DEFAULT.W;\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    BaseTheme.prototype.primary;\n    /** @type {?} */\n    BaseTheme.prototype.accent;\n    /** @type {?} */\n    BaseTheme.prototype.warn;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/color-picker/color-picker.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ColorPickerComponent {\n    constructor() {\n        this.regex = REGEX.HEX.TEST;\n        this.parseHex = (/**\n         * @param {?} v\n         * @return {?}\n         */\n        (v) => {\n            if (v != null) {\n                if (typeof v === \"string\") {\n                    v = parseInt(v);\n                }\n                /** @type {?} */\n                const hex = v.toString(16);\n                return hex.length > 1 ? hex : `${hex}${hex}`;\n            }\n            return \"FF\";\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get hexColor() {\n        /** @type {?} */\n        const _r = this.parseHex(this.red);\n        /** @type {?} */\n        const _g = this.parseHex(this.green);\n        /** @type {?} */\n        const _b = this.parseHex(this.blue);\n        this._hexColor = `${_r}${_g}${_b}`.toUpperCase();\n        return this._hexColor;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    set hexColor(str) {\n        this._staging = str;\n    }\n    /**\n     * @return {?}\n     */\n    get rgb() {\n        return `rgb(${this.red}, ${this.green}, ${this.blue})`;\n    }\n    /**\n     * @return {?}\n     */\n    setRGB() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.updateRGB(this._staging);\n        }), 1500);\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    updateRGB(str) {\n        /** @type {?} */\n        const parse = (/**\n         * @param {?} hex\n         * @return {?}\n         */\n        (hex) => parseInt(hex, 16));\n        /** @type {?} */\n        const valid = new RegExp(REGEX.HEX.TEST).test(str);\n        if (valid) {\n            this._hexColor = str;\n            /** @type {?} */\n            const map = REGEX.HEX.PARSE.exec(str);\n            this.red = parse(map[1]);\n            this.green = parse(map[2]);\n            this.blue = parse(map[3]);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    previewPalette() {\n        this.onChg(this.hexColor);\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    writeValue(str) {\n        this.updateRGB(str);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChg = (/**\n         * @param {?} val\n         * @return {?}\n         */\n        (val) => {\n            /** @type {?} */\n            let hex = val;\n            if (val.indexOf(\"#\") === -1) {\n                hex = `#${hex}`;\n            }\n            fn(hex);\n        });\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { }\n}\nColorPickerComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"app-color-picker\",\n                template: \"<div class=\\\"rgb-picker\\\">\\n  <div class=\\\"sliders\\\">\\n    <h2 class=\\\"mat-h2 margin-unset\\\">\\n      {{ paletteType }}\\n    </h2>\\n    <div class=\\\"red-slider short-slider\\\">\\n      <input #redSlider [(ngModel)]=\\\"red\\\" type=\\\"range\\\" max=\\\"255\\\" />\\n    </div>\\n    <div class=\\\"green-slider short-slider\\\">\\n      <input #greenSlider [(ngModel)]=\\\"green\\\" type=\\\"range\\\" max=\\\"255\\\" />\\n    </div>\\n    <div class=\\\"blue-slider short-slider\\\">\\n      <input #blueSlider [(ngModel)]=\\\"blue\\\" type=\\\"range\\\" max=\\\"255\\\" />\\n    </div>\\n    <div class=\\\"hex-input-container\\\">\\n      #\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"hex-input\\\"\\n        #hexInput\\n        [(ngModel)]=\\\"hexColor\\\"\\n        (keyup)=\\\"setRGB()\\\"\\n        (click)=\\\"hexInput.focus(); hexInput.select()\\\"\\n      />\\n    </div>\\n  </div>\\n  <div class=\\\"preview-container\\\">\\n    <div class=\\\"color-preview\\\" [style.backgroundColor]=\\\"rgb\\\"></div>\\n    <button type=\\\"button\\\" mat-stroked-button (click)=\\\"previewPalette()\\\">\\n      Preview\\n    </button>\\n  </div>\\n</div>\\n\",\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => ColorPickerComponent)),\n                        multi: true,\n                    },\n                ],\n                styles: [\".rgb-picker{border-radius:5px;box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12);display:grid;grid-column-gap:1rem;grid-template-columns:2fr auto;padding:16px;position:relative;transition:box-shadow .28s cubic-bezier(.4,0,.2,1)}.rgb-picker .sliders{display:grid;grid-template-rows:repeat(4,minmax(auto 1fr));row-gap:1rem}.rgb-picker .sliders .red-slider input[type=range]::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker .sliders .red-slider input[type=range]::-webkit-slider-thumb{background:#f30}.rgb-picker .sliders .red-slider input[type=range]:focus::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker .sliders .red-slider input[type=range]::-moz-range-track{background:#cdcdcd}.rgb-picker .sliders .red-slider input[type=range]::-moz-range-thumb{background:#f30}.rgb-picker .sliders .red-slider input[type=range]::-ms-fill-lower,.rgb-picker .sliders .red-slider input[type=range]::-ms-fill-upper{background:#cdcdcd}.rgb-picker .sliders .red-slider input[type=range]::-ms-thumb{background:#f30}.rgb-picker .sliders .red-slider input[type=range]:focus::-ms-fill-lower,.rgb-picker .sliders .red-slider input[type=range]:focus::-ms-fill-upper{background:#cdcdcd}.rgb-picker .sliders .green-slider input[type=range]::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker .sliders .green-slider input[type=range]::-webkit-slider-thumb{background:#3c3}.rgb-picker .sliders .green-slider input[type=range]:focus::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker .sliders .green-slider input[type=range]::-moz-range-track{background:#cdcdcd}.rgb-picker .sliders .green-slider input[type=range]::-moz-range-thumb{background:#3c3}.rgb-picker .sliders .green-slider input[type=range]::-ms-fill-lower,.rgb-picker .sliders .green-slider input[type=range]::-ms-fill-upper{background:#cdcdcd}.rgb-picker .sliders .green-slider input[type=range]::-ms-thumb{background:#3c3}.rgb-picker .sliders .green-slider input[type=range]:focus::-ms-fill-lower,.rgb-picker .sliders .green-slider input[type=range]:focus::-ms-fill-upper{background:#cdcdcd}.rgb-picker .sliders .blue-slider input[type=range]::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker .sliders .blue-slider input[type=range]::-webkit-slider-thumb{background:#369}.rgb-picker .sliders .blue-slider input[type=range]:focus::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker .sliders .blue-slider input[type=range]::-moz-range-track{background:#cdcdcd}.rgb-picker .sliders .blue-slider input[type=range]::-moz-range-thumb{background:#369}.rgb-picker .sliders .blue-slider input[type=range]::-ms-fill-lower,.rgb-picker .sliders .blue-slider input[type=range]::-ms-fill-upper{background:#cdcdcd}.rgb-picker .sliders .blue-slider input[type=range]::-ms-thumb{background:#369}.rgb-picker .sliders .blue-slider input[type=range]:focus::-ms-fill-lower,.rgb-picker .sliders .blue-slider input[type=range]:focus::-ms-fill-upper{background:#cdcdcd}.rgb-picker .sliders .short-slider input[type=range]{-webkit-appearance:none;margin:0;padding:0;width:100%}.rgb-picker .sliders .short-slider input[type=range]::-webkit-slider-runnable-track{border:none;height:3px;width:100%}.rgb-picker .sliders .short-slider input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:none;border-radius:50%;cursor:pointer;height:10px;margin-top:-4px;width:10px}.rgb-picker .sliders .short-slider input[type=range]:focus{outline:none}.rgb-picker .sliders .short-slider input[type=range]::-moz-range-track{border:none;height:2px;width:100%}.rgb-picker .sliders .short-slider input[type=range]::-moz-range-thumb{border:none;border-radius:50%;cursor:pointer;height:10px;width:10px}.rgb-picker .sliders .short-slider input[type=range]::-ms-fill-lower,.rgb-picker .sliders .short-slider input[type=range]::-ms-fill-upper{border-radius:10px}.rgb-picker .sliders .short-slider input[type=range]::-ms-thumb{border:none;cursor:pointer;height:10px;margin-top:-1px;width:10x}.rgb-picker .sliders .short-slider input[type=range]::-ms-track{background:transparent;border-color:transparent;border-width:2px 0;color:transparent;height:4px;overflow:visible;width:100%}.rgb-picker .sliders .hex-input-container{display:grid;grid-column-gap:3px;grid-template-columns:auto 1fr}.rgb-picker .sliders .hex-input-container .hex-input{-webkit-animation-name:cdk-text-field-autofill-end;-webkit-appearance:none;-webkit-rtl-ordering:logical;-webkit-writing-mode:horizontal-tb!important;animation-name:cdk-text-field-autofill-end;background:0 0;background-color:#fff;border-bottom:1px solid grey;border-image-outset:0;border-image-repeat:initial;border-image-slice:100%;border-image-source:none;border-image-width:1;border-left-color:initial;border-left-style:none;border-left-width:medium;border-right-color:initial;border-right-style:none;border-right-width:medium;border-top-color:initial;border-top-style:none;border-top-width:medium;caret-color:var(--P-500);color:currentColor;cursor:text;display:inline-block;font:inherit;letter-spacing:normal;margin:0;max-width:100%;outline:0;padding:0 0 .25rem;text-align:inherit;text-indent:0;text-rendering:auto;text-shadow:none;text-transform:none;vertical-align:bottom;width:100%;word-spacing:normal}.rgb-picker .preview-container{display:grid;grid-row-gap:1rem;grid-template-rows:1fr auto}.rgb-picker .preview-container .color-preview{border:1px solid #d3d3d3;border-radius:50%;height:75px;margin-top:.25rem;width:75px}\"]\n            }] },\n    { type: Injectable }\n];\nColorPickerComponent.propDecorators = {\n    paletteType: [{ type: Input, args: [\"paletteType\",] }]\n};\nif (false) {\n    /** @type {?} */\n    ColorPickerComponent.prototype.regex;\n    /** @type {?} */\n    ColorPickerComponent.prototype.paletteType;\n    /** @type {?} */\n    ColorPickerComponent.prototype.onChg;\n    /** @type {?} */\n    ColorPickerComponent.prototype.red;\n    /** @type {?} */\n    ColorPickerComponent.prototype.green;\n    /** @type {?} */\n    ColorPickerComponent.prototype.blue;\n    /** @type {?} */\n    ColorPickerComponent.prototype._staging;\n    /** @type {?} */\n    ColorPickerComponent.prototype._hexColor;\n    /** @type {?} */\n    ColorPickerComponent.prototype.parseHex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/theme-util.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ThemeUtilModule {\n}\nThemeUtilModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [PalettePickerComponent, ColorPickerComponent],\n                imports: [\n                    FormsModule,\n                    BrowserAnimationsModule,\n                    BrowserModule,\n                    ReactiveFormsModule,\n                ],\n                exports: [PalettePickerComponent, ColorPickerComponent],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: material-theme-util.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BaseTheme, ColorPickerComponent, PalettePickerComponent, ThemeUtilModule, ThemeUtilService };\n//# sourceMappingURL=material-theme-util.js.map\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n   .bootstrapModule(\n       AppModule)\n   .catch(err => console.log(err));\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular change detection\n */\nimport \"zone.js/dist/zone\";\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}