{"version":3,"sources":["./src/app/app.component.css","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./dist/material-theme-util/fesm2015/material-theme-util.js","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;ACApM;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;ACfzB;AACwB;IAOrD,YAAY,SAAZ,YAAY;IAOvB,YAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAN/C,UAAK,GAAG;YACN,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE,SAAS;YACjB,IAAI,EAAE,SAAS;SAChB,CAAC;QAGA,IAAI,CAAC,SAAS,CAAC,SAAS,CACtB,IAAI,CAAC,KAAK,CAAC,OAAO,EAClB,IAAI,CAAC,KAAK,CAAC,MAAM,EACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAChB,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACrD,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;CACF;;YAjCQ,0EAAgB;;AAOZ,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CA0BxB;AA1BwB;;;;;;;;;;;;;ACRzB;AAAe,2nBAA4jB,yDAAyD,iBAAiB,sGAAsG,uDAAuD,gBAAgB,oGAAoG,mDAAmD,cAAc,qCAAqC,E;;;;;;;;;;;;;;;;;;;;;;;;ACAl9B;AACjB;AACoB;AACF;AACoB;AAChC;AAIP;AACK;IAehC,SAAS,SAAT,SAAS;CAAG;AAAZ,SAAS;IAbrB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,2DAAY,CAAC;QAC5B,OAAO,EAAE;YACP,uEAAa;YACb,yEAAe;YACf,0EAAgB;YAChB,wEAAe;YACf,4FAAuB;YACvB,0DAAW;SACZ;QACD,SAAS,EAAE,CAAC,0EAAgB,CAAC;QAC7B,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;ACzBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+Y;AACtP;AAC1E;AACrB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO,IAAI,OAAO,IAAI,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO,IAAI,OAAO,IAAI,OAAO;AACnD;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,IAAI,cAAc,IAAI,cAAc,IAAI;AACxE,gCAAgC,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,IAAI;AAC1C;AACA;AACA;AACA;AACA,uBAAuB,GAAG,EAAE,GAAG,EAAE,GAAG;AACpkCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,MAAM;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,EAAE;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,SAAS,EAAE;AACxF;AACA;AACA,oFAAoF,SAAS,EAAE;AAC/F;AACA;AACA,mFAAmF,SAAS,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,mCAAmC;AACxG;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,oDAAoD,IAAI,OAAO,MAAM;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,sCAAsC;AACvH,4CAA4C,wEAAkB,EAAE,8EAA8E;AAC9I,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,IAAI,EAAE,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,GAAG,EAAE,GAAG,EAAE,GAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS,IAAI,WAAW,IAAI,UAAU;AAC5D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI;AAC9B;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,yFAAyF,0CAA0C;AACnI,+CAA+C,uEAAiB,EAAE,yEAAyE,6BAA6B,aAAa,wEAAkB;AACvM;AACA,yBAAyB,gEAAiB;AAC1C,6BAA6B,gEAAU;AACvC;AACA;AACA,2nBAA2nB;AAC3nB,oBAAoB,sEAAgB;AACpC,QAAQ,oEAAc;AACtB,QAAQ,oEAAc;AACtB,QAAQ,oEAAc;AACtB,QAA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","file":"main-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi9zcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from \"@angular/core\";\nimport { ThemeUtilService } from \"../../dist/material-theme-util\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  theme = {\n    primary: \"#5D5D5D\",\n    accent: \"#d3d3d3\",\n    warn: \"#ff0000\",\n  };\n\n  constructor(private themeUtil: ThemeUtilService) {\n    this.themeUtil.initTheme(\n      this.theme.primary,\n      this.theme.accent,\n      this.theme.warn\n    );\n  }\n\n  updatePrimary() {\n    this.themeUtil.setPrimaryPalette(this.theme.primary);\n  }\n\n  updateAccent() {\n    this.themeUtil.setAccentPalette(this.theme.accent);\n  }\n\n  updateWarn() {\n    this.themeUtil.setWarnPalette(this.theme.warn);\n  }\n}\n","export default \"<div #THEME_CONTAINER>\\n  <mat-toolbar color=\\\"primary\\\"> PRIMARY! </mat-toolbar>\\n  <mat-toolbar color=\\\"accent\\\"> ACCENT! </mat-toolbar>\\n  <mat-toolbar color=\\\"warn\\\"> WARN! </mat-toolbar>\\n\\n  <section class=\\\"margin1\\\">\\n    <div class=\\\"mat-h1\\\">\\n      Built-in Color Pickers\\n    </div>\\n    <mat-palette-picker [(ngModel)]=\\\"theme\\\"></mat-palette-picker>\\n  </section>\\n\\n  <section class=\\\"margin1\\\">\\n    <div class=\\\"mat-h1\\\">\\n      Client Defined Pickers\\n    </div>\\n    <div>\\n      <input type=\\\"color\\\" #pPicker (change)=\\\"theme.primary = pPicker.value; updatePrimary()\\\" [value]=\\\"theme.primary\\\" />\\n      {{ theme.primary }}\\n    </div>\\n    <div>\\n      <input type=\\\"color\\\" #aPicker (change)=\\\"theme.accent = aPicker.value; updateAccent()\\\" [value]=\\\"theme.accent\\\" />\\n      {{ theme.accent }}\\n    </div>\\n    <div>\\n      <input type=\\\"color\\\" #wPicker (change)=\\\"theme.warn = wPicker.value; updateWarn()\\\" [value]=\\\"theme.warn\\\" />\\n      {{ theme.warn }}\\n    </div>\\n  </section>\\n</div>\\n\";","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\nimport {\n  ThemeUtilModule,\n  ThemeUtilService,\n} from \"../../dist/material-theme-util\";\nimport { FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    ThemeUtilModule,\n    MatToolbarModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    FormsModule,\n  ],\n  providers: [ThemeUtilService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, ɵɵdefineComponent, ɵɵProvidersFeature, forwardRef, ɵɵgetCurrentView, ɵɵelementStart, ɵɵtext, ɵɵelementEnd, ɵɵlistener, ɵɵrestoreView, ɵɵreference, ɵɵelement, ɵɵadvance, ɵɵtextInterpolate1, ɵɵproperty, ɵɵstyleProp, Component, Input, ɵɵdirectiveInject, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, RangeValueAccessor, DefaultValueAccessor, NgControlStatus, NgModel, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\n\nclass Hex {\n    constructor(str) {\n        this.str = str;\n    }\n    parse() {\n        return this.str;\n    }\n}\nclass HSL {\n    constructor(h, s, l) {\n        this.h = h;\n        this.s = s;\n        this.l = l;\n    }\n    parse() {\n        return `hsl(${this.h}, ${this.s}, ${this.l})`;\n    }\n}\nclass RGB {\n    constructor(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    parse() {\n        return `rgb(${this.r}, ${this.g}, ${this.b})`;\n    }\n}\n\n// Color Utility functions had to be exported to their\nconst REGEX = {\n    HEX: {\n        PARSE: /^#?([a-fA-F0-9]{1,2})([a-fA-F0-9]{1,2})([a-fA-F0-9]{1,2})$/i,\n        TEST: `^#?(([a-fA-F0-9]{2}){3}|([a-fA-F0-9]{1}){3})$`\n    }\n};\n/*\nRGB Utilities\n=====================================================\n=====================================================\n*/\nconst rgb2Hex = (rgb) => {\n    const parseHex = v => {\n        const hex = v.toString(16);\n        return hex.length === 1 ? `0${hex}` : hex;\n    };\n    const _r = parseHex(rgb.r);\n    const _g = parseHex(rgb.g);\n    const _b = parseHex(rgb.b);\n    return new Hex(`#${_r}${_g}${_b}`);\n};\nconst rgb2Hsl = (rgb) => {\n    let h = 0, s = 0, l = 0;\n    // Make r, g, and b fractions of 1\n    const _r = (rgb.r /= 255);\n    const _g = (rgb.g /= 255);\n    const _b = (rgb.b /= 255);\n    // Find greatest and smallest channel values\n    const cmin = Math.min(_r, _g, _b), cmax = Math.max(_r, _g, _b), delta = cmax - cmin;\n    if (delta == 0)\n        h = 0;\n    // Red is max\n    else if (cmax == _r)\n        h = ((_g - _b) / delta) % 6;\n    // Green is max\n    else if (cmax == _g)\n        h = (_b - _r) / delta + 2;\n    // Blue is max\n    else\n        h = (_r - _g) / delta + 4;\n    h = Math.round(h * 60);\n    // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n    // Calculate saturation\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n    return new HSL(h, s, l);\n};\nconst ParseRGB = {\n    HEX: rgb2Hex,\n    HSL: rgb2Hsl\n};\n/*\nHEX Utilities\n=====================================================\n=====================================================\n*/\nconst hex2RGB = (hex) => {\n    let r, g, b;\n    const result = REGEX.HEX.PARSE.exec(hex.parse());\n    if (!!result) {\n        r = parseInt(result[1], 16);\n        g = parseInt(result[2], 16);\n        b = parseInt(result[3], 16);\n    }\n    return new RGB(r, g, b);\n};\nconst hex2Hsl = (hex) => {\n    const rgb = hex2RGB(hex);\n    return ParseRGB.HSL(rgb);\n};\nconst testHex = str => {\n    return new RegExp(REGEX.HEX.TEST).test(str);\n};\nconst ParseHEX = {\n    RGB: hex2RGB,\n    HSL: hex2Hsl,\n    TEST: testHex\n};\n/*\nHSL Utilities\n=====================================================\n=====================================================\n*/\nconst hsl2RGB = (hsl) => {\n    // Must be fractions of 1\n    const h = hsl.h;\n    const s = hsl.s / 100;\n    const l = hsl.l / 100;\n    const c = (1 - Math.abs(2 * l - 1)) * s, x = c * (1 - Math.abs(((h / 60) % 2) - 1)), m = l - c / 2;\n    let r = 0, g = 0, b = 0;\n    if (0 <= h && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    }\n    else if (60 <= h && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    }\n    else if (120 <= h && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    }\n    else if (180 <= h && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    }\n    else if (240 <= h && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    }\n    else if (300 <= h && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n    return new RGB(r, g, b);\n};\nconst hsl2Hex = (hsl) => {\n    const rgb = hsl2RGB(hsl);\n    return ParseRGB.HEX(rgb);\n};\nconst ParseHSL = {\n    RGB: hsl2RGB,\n    HEX: hsl2Hex\n};\n\nvar ColorType;\n(function (ColorType) {\n    ColorType[\"PRIMARY\"] = \"P\";\n    ColorType[\"ACCENT\"] = \"A\";\n    ColorType[\"WARN\"] = \"W\";\n})(ColorType || (ColorType = {}));\n// Defines the types of ColorFormats\nvar ColorFormat;\n(function (ColorFormat) {\n    ColorFormat[\"HEX\"] = \"HEX\";\n    ColorFormat[\"RGB\"] = \"RGB\";\n    ColorFormat[\"HSL\"] = \"HSL\";\n})(ColorFormat || (ColorFormat = {}));\nclass Color {\n    constructor(val) {\n        if (!(val instanceof Hex) &&\n            !(val instanceof RGB) &&\n            !(val instanceof HSL)) {\n            this.parseStr(val);\n        }\n        else {\n            this.set(val);\n        }\n    }\n    get RGB() {\n        return this._rgb;\n    }\n    get HEX() {\n        return this._hex;\n    }\n    get HSL() {\n        return this._hsl;\n    }\n    get(type = ColorFormat.HEX) {\n        if (type === ColorFormat.HEX) {\n            return this.HEX;\n        }\n        else if (type === ColorFormat.RGB) {\n            return this.RGB;\n        }\n        else if (type === ColorFormat.HSL) {\n            return this.HSL;\n        }\n        else {\n            throw `Invalid type for color.`;\n        }\n    }\n    toStr(type = ColorFormat.HEX) {\n        if (type === ColorFormat.HEX) {\n            return this.HEX.parse();\n        }\n        else if (type === ColorFormat.RGB) {\n            return this.RGB.parse();\n        }\n        else if (type === ColorFormat.HSL) {\n            return this.HSL.parse();\n        }\n        else {\n            throw `Invalid type for color.`;\n        }\n    }\n    parseStr(str) {\n        const validHex = ParseHEX.TEST(str);\n        let _color;\n        if (validHex) {\n            _color = new Hex(str);\n        }\n        this.set(_color);\n    }\n    set(val) {\n        if (val instanceof Hex) {\n            this._hex = val;\n            this._rgb = ParseHEX.RGB(val);\n            this._hsl = ParseHEX.HSL(val);\n        }\n        else if (val instanceof RGB) {\n            this._hex = ParseRGB.HEX(val);\n            this._rgb = val;\n            this._hsl = ParseRGB.HSL(val);\n        }\n        else if (val instanceof HSL) {\n            this._hex = ParseHSL.HEX(val);\n            this._rgb = ParseHSL.RGB(val);\n            this._hsl = val;\n        }\n        else {\n            throw `Invalid input format for color.`;\n        }\n    }\n}\n\n// Defines the public input type for the palette type.\nvar PaletteType;\n(function (PaletteType) {\n    PaletteType[\"P\"] = \"PRIMARY\";\n    PaletteType[\"A\"] = \"ACCENT\";\n    PaletteType[\"W\"] = \"WARN\";\n})(PaletteType || (PaletteType = {}));\nclass HueMap {\n}\nclass PaletteModel {\n    constructor(colorMap, type) {\n        this.colorMap = colorMap;\n        this.type = type;\n        this.themeContainer = document.querySelector(\"body\");\n        // Assigns the value of the palette based on the\n        // format and palette type (Primary, accent, warn)\n        // @TODO Make the contrast more dynamic\n        this.assignPalette = (format = ColorFormat.HEX) => {\n            const t = this.paletteType;\n            const themeEl = this.themeContainer;\n            if (!!themeEl) {\n                themeEl.style.setProperty(`--${t}-50`, this._50.toStr(format));\n                themeEl.style.setProperty(`--${t}-100`, this._100.toStr(format));\n                themeEl.style.setProperty(`--${t}-200`, this._200.toStr(format));\n                themeEl.style.setProperty(`--${t}-300`, this._300.toStr(format));\n                themeEl.style.setProperty(`--${t}-400`, this._400.toStr(format));\n                themeEl.style.setProperty(`--${t}-500`, this._500.toStr(format));\n                themeEl.style.setProperty(`--${t}-600`, this._600.toStr(format));\n                themeEl.style.setProperty(`--${t}-700`, this._700.toStr(format));\n                themeEl.style.setProperty(`--${t}-800`, this._800.toStr(format));\n                themeEl.style.setProperty(`--${t}-900`, this._900.toStr(format));\n                themeEl.style.setProperty(`--${t}-A100`, this._A100.toStr(format));\n                themeEl.style.setProperty(`--${t}-A200`, this._A200.toStr(format));\n                themeEl.style.setProperty(`--${t}-A400`, this._A400.toStr(format));\n                themeEl.style.setProperty(`--${t}-A700`, this._A700.toStr(format));\n            }\n            else {\n                throw `No body element found!`;\n            }\n        };\n        // Sets Palette type (Primary/accent/warn)\n        // if it exists\n        if (!!this.type) {\n            this.paletteType = type;\n        }\n        else {\n            throw `No Palette type has been set.`;\n        }\n        // Sets ColorMap (Primary/accent/warn)\n        // if it exists\n        if (!!this.colorMap && this.colorMap.length > 0) {\n            this.colorMap.map((v) => {\n                this[`_${v.ref}`] = v.value;\n            });\n        }\n        else {\n            throw `Palette could not be generated.`;\n        }\n    }\n}\nclass Palette {\n    constructor(color, type) {\n        this.color = color;\n        this.type = type;\n        this.buildPalette = () => {\n            return this.generatePalette(this.color);\n        };\n        /*\n         Generates a color palette given a single color.\n      \n         1. Color is parsed to HSL format\n         2. Light (HS{L}) is altered for each Palette color\n         3. Palette is generated with Color Objects (allowing for use in any color format)\n      \n        */\n        this.generatePalette = (color) => {\n            const _color = color.HSL;\n            const h = Math.round(_color.h);\n            const s = Math.round(_color.s);\n            const l = Math.round(_color.l);\n            if (isNaN(h) || isNaN(s) || isNaN(l)) {\n                throw new TypeError(\"Invalid input\");\n            }\n            if (h < 0 || h > 360) {\n                throw new RangeError(`Hue must be an integer within [0, 360]; given ${h}%`);\n            }\n            if (s < 0 || s > 100) {\n                throw new RangeError(`Saturation must be an integer within [0, 100]; given ${s}%`);\n            }\n            if (l < 0 || l > 100) {\n                throw new RangeError(`Lightness must be an integer within [0, 100]; given ${l}`);\n            }\n            const hueMapset = this.generateAlterations(l).map((map) => {\n                const _color = new Color(new HSL(h, s, map.value));\n                return {\n                    ref: map.ref,\n                    value: _color,\n                };\n            });\n            return new PaletteModel(hueMapset, this.type);\n        };\n        // Generates color palette based on the formula\n        // provided by @leodido (https://github.com/leodido/material-palette)\n        this.minimax = (val) => Math.min(100, Math.max(0, val));\n        this.generateAlterations = (l) => [\n            {\n                ref: \"50\",\n                value: this.minimax(l + 52),\n            },\n            {\n                ref: \"100\",\n                value: this.minimax(l + 37),\n            },\n            {\n                ref: \"200\",\n                value: this.minimax(l + 26),\n            },\n            {\n                ref: \"300\",\n                value: this.minimax(l + 12),\n            },\n            {\n                ref: \"400\",\n                value: this.minimax(l + 6),\n            },\n            {\n                ref: \"500\",\n                value: l,\n            },\n            {\n                ref: \"600\",\n                value: this.minimax(l - 6),\n            },\n            {\n                ref: \"700\",\n                value: this.minimax(l - 12),\n            },\n            {\n                ref: \"800\",\n                value: this.minimax(l - 18),\n            },\n            {\n                ref: \"900\",\n                value: this.minimax(l - 24),\n            },\n            {\n                ref: \"A100\",\n                value: this.minimax(l + 24),\n            },\n            {\n                ref: \"A200\",\n                value: this.minimax(l + 16),\n            },\n            {\n                ref: \"A400\",\n                value: this.minimax(l - 1),\n            },\n            {\n                ref: \"A700\",\n                value: this.minimax(l - 12),\n            },\n        ];\n    }\n}\n\n// Default theme applied when none is provided\nvar DEFAULT_THEME;\n(function (DEFAULT_THEME) {\n    DEFAULT_THEME[\"PRIMARY\"] = \"#023057\";\n    DEFAULT_THEME[\"ACCENT\"] = \"#c1c5c8\";\n    DEFAULT_THEME[\"WARN\"] = \"#ff0000\";\n})(DEFAULT_THEME || (DEFAULT_THEME = {}));\n// Color Theme Class for updating,\n// managing the theme style\nclass Theme {\n    constructor(p, a, w) {\n        this.p = p;\n        this.a = a;\n        this.w = w;\n        this.setPrimary(p);\n        this.setAccent(a);\n        this.setWarn(w);\n    }\n    setPrimary(color = DEFAULT_THEME.PRIMARY) {\n        this.primary = new Color(color);\n        this.buildPalette(this.primary, ColorType.PRIMARY);\n    }\n    setAccent(color = DEFAULT_THEME.ACCENT) {\n        this.accent = new Color(color);\n        this.buildPalette(this.accent, ColorType.ACCENT);\n    }\n    setWarn(color = DEFAULT_THEME.WARN) {\n        this.warn = new Color(color);\n        this.buildPalette(this.warn, ColorType.WARN);\n    }\n    buildPalette(color, type) {\n        new Palette(color, type).buildPalette().assignPalette();\n    }\n}\n// @TODO EXPERIMENTAL feature for\n// applying other theme attributes\n// ex. Font-family, border-radius, etc.\n// class UIThemeMap<T> {\n//   public name: string;\n//   private value: T;\n//   get = () => this.value;\n//   set = (v: T) => (this.value = v);\n// }\n// @TODO EXPERIMENTAL feature for\n// applying other theme attributes\n// ex. Font-family, border-radius, etc.\n///////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////\n// export class Theme {\n//   private themeContainer: any = document.querySelector(\"body\");\n//   private themeMap: UIThemeMap<any>[];\n//   public colorTheme: ColorTheme;\n//   setThemeMap(themeMap: UIThemeMap<any>[]): void {\n//     this.themeMap = themeMap;\n//     this.applyUITheme();\n//   }\n//   constructor(themeMap?: UIThemeMap<any>[], private basicTheme?: {p?: string, a?: string, w?: string}) {\n//     if (!!themeMap) {\n//       this.themeMap = themeMap;\n//     } else {\n//       this.themeMap = [];\n//     }\n//     if (!!basicTheme) {\n//       this.colorTheme = new ColorTheme(this.basicTheme);\n//     } else {\n//       this.colorTheme = new ColorTheme();\n//     }\n//   }\n//   // Applies theme properties IF they are applied via CSS Attributes\n//   private applyUITheme(): void {\n//     this.themeMap.map(_map => {\n//       const ref = _map.name;\n//       this.applyAttr(ref, _map.get());\n//       return;\n//     });\n//   }\n//   private applyAttr(ref: string, value: string): void {\n//     if (!!ref) {\n//       this.themeContainer.style.setProperty(`--${ref}`, `(${value})`);\n//     }\n//   }\n// @TODO EXPERIMENTAL feature for\n// applying other theme attributes\n// ex. Font-family, border-radius, etc.\n// private buildAttr<T>(name: string, val: T): UIThemeMap<T> {\n//   const uiMap = new UIThemeMap<T>();\n//   uiMap.set(val);\n//   uiMap.name = name;\n//   return uiMap;\n// }\n// }\n\nclass ThemeUtilService {\n    initTheme(primary, accent, warn) {\n        this.colorTheme = new Theme(primary, accent, warn);\n    }\n    setPrimaryPalette(str) {\n        this.colorTheme.setPrimary(str);\n    }\n    setAccentPalette(str) {\n        this.colorTheme.setAccent(str);\n    }\n    setWarnPalette(str) {\n        this.colorTheme.setWarn(str);\n    }\n}\n/** @nocollapse */ ThemeUtilService.ɵfac = function ThemeUtilService_Factory(t) { return new (t || ThemeUtilService)(); };\n/** @nocollapse */ ThemeUtilService.ɵprov = ɵɵdefineInjectable({ token: ThemeUtilService, factory: ThemeUtilService.ɵfac, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ThemeUtilService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], null, null); })();\n\nclass ColorPickerComponent {\n    constructor() {\n        this.regex = REGEX.HEX.TEST;\n        this.parseHex = v => {\n            if (v != null) {\n                if (typeof v === \"string\") {\n                    v = parseInt(v);\n                }\n                const hex = v.toString(16);\n                return hex.length > 1 ? hex : `${hex}${hex}`;\n            }\n            return \"FF\";\n        };\n    }\n    get hexColor() {\n        const _r = this.parseHex(this.red);\n        const _g = this.parseHex(this.green);\n        const _b = this.parseHex(this.blue);\n        this._hexColor = `${_r}${_g}${_b}`.toUpperCase();\n        return this._hexColor;\n    }\n    set hexColor(str) {\n        this._staging = str;\n    }\n    get rgb() {\n        return `rgb(${this.red}, ${this.green}, ${this.blue})`;\n    }\n    setRGB() {\n        setTimeout(() => {\n            this.updateRGB(this._staging);\n        }, 1500);\n    }\n    updateRGB(str) {\n        const parse = hex => parseInt(hex, 16);\n        const valid = new RegExp(REGEX.HEX.TEST).test(str);\n        if (valid) {\n            this._hexColor = str;\n            const map = REGEX.HEX.PARSE.exec(str);\n            this.red = parse(map[1]);\n            this.green = parse(map[2]);\n            this.blue = parse(map[3]);\n        }\n    }\n    previewPalette() {\n        this.onChg(this.hexColor);\n    }\n    writeValue(str) {\n        this.updateRGB(str);\n    }\n    registerOnChange(fn) {\n        this.onChg = (val) => {\n            let hex = val;\n            if (val.indexOf(\"#\") === -1) {\n                hex = `#${hex}`;\n            }\n            fn(hex);\n        };\n    }\n    registerOnTouched(fn) { }\n}\n/** @nocollapse */ ColorPickerComponent.ɵfac = function ColorPickerComponent_Factory(t) { return new (t || ColorPickerComponent)(); };\n/** @nocollapse */ ColorPickerComponent.ɵcmp = ɵɵdefineComponent({ type: ColorPickerComponent, selectors: [[\"app-color-picker\"]], inputs: { paletteType: \"paletteType\" }, features: [ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef((() => ColorPickerComponent)),\n                multi: true\n            }\n        ])], decls: 21, vars: 7, consts: [[1, \"rgb-picker\"], [1, \"sliders\"], [1, \"mat-h2\", \"margin-unset\"], [1, \"red-slider\", \"short-slider\"], [\"type\", \"range\", \"max\", \"255\", 3, \"ngModel\", \"ngModelChange\"], [\"redSlider\", \"\"], [1, \"green-slider\", \"short-slider\"], [\"greenSlider\", \"\"], [1, \"blue-slider\", \"short-slider\"], [\"blueSlider\", \"\"], [1, \"hex-input-container\"], [\"type\", \"text\", 1, \"hex-input\", 3, \"ngModel\", \"ngModelChange\", \"keyup\", \"click\"], [\"hexInput\", \"\"], [1, \"preview-container\"], [1, \"color-preview\"], [\"type\", \"button\", \"mat-stroked-button\", \"\", 3, \"click\"]], template: function ColorPickerComponent_Template(rf, ctx) { if (rf & 1) {\n        const _r4 = ɵɵgetCurrentView();\n        ɵɵelementStart(0, \"div\", 0);\n        ɵɵelementStart(1, \"div\", 1);\n        ɵɵelementStart(2, \"h2\", 2);\n        ɵɵtext(3);\n        ɵɵelementEnd();\n        ɵɵelementStart(4, \"div\", 3);\n        ɵɵelementStart(5, \"input\", 4, 5);\n        ɵɵlistener(\"ngModelChange\", function ColorPickerComponent_Template_input_ngModelChange_5_listener($event) { return ctx.red = $event; });\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementStart(7, \"div\", 6);\n        ɵɵelementStart(8, \"input\", 4, 7);\n        ɵɵlistener(\"ngModelChange\", function ColorPickerComponent_Template_input_ngModelChange_8_listener($event) { return ctx.green = $event; });\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementStart(10, \"div\", 8);\n        ɵɵelementStart(11, \"input\", 4, 9);\n        ɵɵlistener(\"ngModelChange\", function ColorPickerComponent_Template_input_ngModelChange_11_listener($event) { return ctx.blue = $event; });\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementStart(13, \"div\", 10);\n        ɵɵtext(14, \" # \");\n        ɵɵelementStart(15, \"input\", 11, 12);\n        ɵɵlistener(\"ngModelChange\", function ColorPickerComponent_Template_input_ngModelChange_15_listener($event) { return ctx.hexColor = $event; })(\"keyup\", function ColorPickerComponent_Template_input_keyup_15_listener() { return ctx.setRGB(); })(\"click\", function ColorPickerComponent_Template_input_click_15_listener() { ɵɵrestoreView(_r4); const _r3 = ɵɵreference(16); _r3.focus(); return _r3.select(); });\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementStart(17, \"div\", 13);\n        ɵɵelement(18, \"div\", 14);\n        ɵɵelementStart(19, \"button\", 15);\n        ɵɵlistener(\"click\", function ColorPickerComponent_Template_button_click_19_listener() { return ctx.previewPalette(); });\n        ɵɵtext(20, \" Preview \");\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵɵadvance(3);\n        ɵɵtextInterpolate1(\" \", ctx.paletteType, \" \");\n        ɵɵadvance(2);\n        ɵɵproperty(\"ngModel\", ctx.red);\n        ɵɵadvance(3);\n        ɵɵproperty(\"ngModel\", ctx.green);\n        ɵɵadvance(3);\n        ɵɵproperty(\"ngModel\", ctx.blue);\n        ɵɵadvance(4);\n        ɵɵproperty(\"ngModel\", ctx.hexColor);\n        ɵɵadvance(3);\n        ɵɵstyleProp(\"background-color\", ctx.rgb);\n    } }, directives: [RangeValueAccessor, DefaultValueAccessor, NgControlStatus, NgModel], styles: [\".rgb-picker[_ngcontent-%COMP%]{border-radius:5px;box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12);display:grid;grid-column-gap:1rem;grid-template-columns:2fr auto;padding:16px;position:relative;transition:box-shadow .28s cubic-bezier(.4,0,.2,1)}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]{display:grid;grid-template-rows:repeat(4,minmax(auto 1fr));row-gap:1rem}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{background:#f30}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-thumb{background:#f30}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-thumb{background:#f30}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{background:#3c3}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-thumb{background:#3c3}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-thumb{background:#3c3}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{background:#369}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-thumb{background:#369}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-thumb{background:#369}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]{-webkit-appearance:none;margin:0;padding:0;width:100%}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-runnable-track{border:none;height:3px;width:100%}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{-webkit-appearance:none;border:none;border-radius:50%;cursor:pointer;height:10px;margin-top:-4px;width:10px}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus{outline:none}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-track{border:none;height:2px;width:100%}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-thumb{border:none;border-radius:50%;cursor:pointer;height:10px;width:10px}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-upper{border-radius:10px}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-thumb{border:none;cursor:pointer;height:10px;margin-top:-1px;width:10x}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-track{background:transparent;border-color:transparent;border-width:2px 0;color:transparent;height:4px;overflow:visible;width:100%}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .hex-input-container[_ngcontent-%COMP%]{display:grid;grid-column-gap:3px;grid-template-columns:auto 1fr}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .hex-input-container[_ngcontent-%COMP%]   .hex-input[_ngcontent-%COMP%]{-webkit-animation-name:cdk-text-field-autofill-end;-webkit-appearance:none;-webkit-rtl-ordering:logical;-webkit-writing-mode:horizontal-tb!important;animation-name:cdk-text-field-autofill-end;background:0 0;background-color:#fff;border-bottom:1px solid grey;border-image-outset:0;border-image-repeat:initial;border-image-slice:100%;border-image-source:none;border-image-width:1;border-left-color:initial;border-left-style:none;border-left-width:medium;border-right-color:initial;border-right-style:none;border-right-width:medium;border-top-color:initial;border-top-style:none;border-top-width:medium;caret-color:var(--P-500);color:currentColor;cursor:text;display:inline-block;font:inherit;letter-spacing:normal;margin:0;max-width:100%;outline:0;padding:0 0 .25rem;text-align:inherit;text-indent:0;text-rendering:auto;text-shadow:none;text-transform:none;vertical-align:bottom;width:100%;word-spacing:normal}.rgb-picker[_ngcontent-%COMP%]   .preview-container[_ngcontent-%COMP%]{display:grid;grid-row-gap:1rem;grid-template-rows:1fr auto}.rgb-picker[_ngcontent-%COMP%]   .preview-container[_ngcontent-%COMP%]   .color-preview[_ngcontent-%COMP%]{border:1px solid #d3d3d3;border-radius:50%;height:75px;margin-top:.25rem;width:75px}\"] });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ColorPickerComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-color-picker\",\n                templateUrl: \"./color-picker.component.html\",\n                styleUrls: [\"./color-picker.component.scss\"],\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((() => ColorPickerComponent)),\n                        multi: true\n                    }\n                ]\n            }]\n    }], null, { paletteType: [{\n            type: Input,\n            args: [\"paletteType\"]\n        }] }); })();\n\nclass PalettePickerComponent {\n    constructor(theme) {\n        this.theme = theme;\n    }\n    get value() {\n        return this.themeStr();\n    }\n    set value(v) {\n        if (!!v && v !== this.themeStr()) {\n            this.writeValue(v);\n            this.chgFn(v);\n        }\n    }\n    get primary() {\n        return this._primary;\n    }\n    set primary(str) {\n        this._primary = str;\n        this.theme.setPrimaryPalette(str);\n        this.updateTheme();\n    }\n    get accent() {\n        return this._accent;\n    }\n    set accent(str) {\n        this._accent = str;\n        this.theme.setAccentPalette(str);\n        this.updateTheme();\n    }\n    get warn() {\n        return this._warn;\n    }\n    set warn(str) {\n        this._warn = str;\n        this.theme.setWarnPalette(str);\n        this.updateTheme();\n    }\n    updateTheme() {\n        this.chgFn(this.themeStr());\n    }\n    themeStr() {\n        const theme = {\n            primary: this._primary,\n            accent: this._accent,\n            warn: this._warn\n        };\n        return new BaseTheme(theme);\n    }\n    writeValue(str) {\n        this.isObjectInput = typeof str === \"object\";\n        const theme = new BaseTheme(str);\n        this._primary = theme.primary;\n        this._accent = theme.accent;\n        this._warn = theme.warn;\n    }\n    registerOnChange(fn) {\n        // Intercept the chgFn to return the type received initially\n        this.chgFn = val => {\n            const obj = this.isObjectInput ? val : JSON.stringify(val);\n            fn(obj);\n        };\n    }\n    registerOnTouched(fn) { }\n    get colorCode() {\n        return this._colorCode;\n    }\n}\n/** @nocollapse */ PalettePickerComponent.ɵfac = function PalettePickerComponent_Factory(t) { return new (t || PalettePickerComponent)(ɵɵdirectiveInject(ThemeUtilService)); };\n/** @nocollapse */ PalettePickerComponent.ɵcmp = ɵɵdefineComponent({ type: PalettePickerComponent, selectors: [[\"mat-palette-picker\"]], inputs: { colorCode: \"colorCode\" }, features: [ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef((() => PalettePickerComponent)),\n                multi: true\n            }\n        ])], decls: 4, vars: 3, consts: [[1, \"col3-xl\", \"col3-lg\", \"col3-md\", \"col2-sm\", \"col2-xs\"], [\"paletteType\", \"Primary\", 3, \"ngModel\", \"ngModelChange\"], [\"paletteType\", \"Accent\", 3, \"ngModel\", \"ngModelChange\"], [\"paletteType\", \"Warn\", 3, \"ngModel\", \"ngModelChange\"]], template: function PalettePickerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵɵelementStart(0, \"div\", 0);\n        ɵɵelementStart(1, \"app-color-picker\", 1);\n        ɵɵlistener(\"ngModelChange\", function PalettePickerComponent_Template_app_color_picker_ngModelChange_1_listener($event) { return ctx.primary = $event; });\n        ɵɵelementEnd();\n        ɵɵelementStart(2, \"app-color-picker\", 2);\n        ɵɵlistener(\"ngModelChange\", function PalettePickerComponent_Template_app_color_picker_ngModelChange_2_listener($event) { return ctx.accent = $event; });\n        ɵɵelementEnd();\n        ɵɵelementStart(3, \"app-color-picker\", 3);\n        ɵɵlistener(\"ngModelChange\", function PalettePickerComponent_Template_app_color_picker_ngModelChange_3_listener($event) { return ctx.warn = $event; });\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngModel\", ctx.primary);\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngModel\", ctx.accent);\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngModel\", ctx.warn);\n    } }, directives: [ColorPickerComponent, NgControlStatus, NgModel], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PalettePickerComponent, [{\n        type: Component,\n        args: [{\n                selector: \"mat-palette-picker\",\n                templateUrl: \"./palette-picker.component.html\",\n                styleUrls: [],\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((() => PalettePickerComponent)),\n                        multi: true\n                    }\n                ]\n            }]\n    }], function () { return [{ type: ThemeUtilService }]; }, { colorCode: [{\n            type: Input,\n            args: [\"colorCode\"]\n        }] }); })();\nvar DEFAULT;\n(function (DEFAULT) {\n    DEFAULT[\"P\"] = \"#D3D3D3\";\n    DEFAULT[\"A\"] = \"#5D5D5D\";\n    DEFAULT[\"W\"] = \"#ff0000\";\n})(DEFAULT || (DEFAULT = {}));\nclass BaseTheme {\n    constructor(obj) {\n        this.primary = DEFAULT.P;\n        this.accent = DEFAULT.A;\n        this.warn = DEFAULT.W;\n        if (!!obj) {\n            if (typeof obj === \"string\") {\n                this.parseObj(JSON.parse(obj));\n            }\n            else {\n                this.parseObj(obj);\n            }\n        }\n    }\n    parseObj(obj) {\n        if (!!obj) {\n            this.primary = obj.primary ? obj.primary : DEFAULT.P;\n            this.accent = obj.accent ? obj.accent : DEFAULT.A;\n            this.warn = obj.warn ? obj.warn : DEFAULT.W;\n        }\n    }\n}\n\nclass ThemeUtilModule {\n}\n/** @nocollapse */ ThemeUtilModule.ɵmod = ɵɵdefineNgModule({ type: ThemeUtilModule });\n/** @nocollapse */ ThemeUtilModule.ɵinj = ɵɵdefineInjector({ factory: function ThemeUtilModule_Factory(t) { return new (t || ThemeUtilModule)(); }, imports: [[\n            FormsModule,\n            BrowserAnimationsModule,\n            BrowserModule,\n            ReactiveFormsModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(ThemeUtilModule, { declarations: [PalettePickerComponent, ColorPickerComponent], imports: [FormsModule,\n        BrowserAnimationsModule,\n        BrowserModule,\n        ReactiveFormsModule], exports: [PalettePickerComponent, ColorPickerComponent] }); })();\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ThemeUtilModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [PalettePickerComponent, ColorPickerComponent],\n                imports: [\n                    FormsModule,\n                    BrowserAnimationsModule,\n                    BrowserModule,\n                    ReactiveFormsModule,\n                ],\n                exports: [PalettePickerComponent, ColorPickerComponent],\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of theme-util\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTheme, ColorPickerComponent, PalettePickerComponent, ThemeUtilModule, ThemeUtilService };\n//# sourceMappingURL=material-theme-util.js.map\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n   .bootstrapModule(\n       AppModule)\n   .catch(err => console.log(err));\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular change detection\n */\nimport \"zone.js/dist/zone\";\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}