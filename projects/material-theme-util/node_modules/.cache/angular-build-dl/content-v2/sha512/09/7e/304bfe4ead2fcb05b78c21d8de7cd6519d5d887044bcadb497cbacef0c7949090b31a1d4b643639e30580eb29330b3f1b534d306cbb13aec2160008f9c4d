(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/dominquecox/Development/GitLabProjects/mat-theme-util/src/main.ts */"zUnb");


/***/ }),

/***/ "A3xY":
/*!***********************************!*\
  !*** ./src/app/app.component.css ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "AytR":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "Sy1n":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_app_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./app.component.html */ "VzVu");
/* harmony import */ var _app_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.component.css */ "A3xY");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _dist_material_theme_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../dist/material-theme-util */ "vl/N");





let AppComponent = class AppComponent {
    constructor(themeUtil) {
        this.themeUtil = themeUtil;
        this.theme = {
            primary: "#5D5D5D",
            accent: "#d3d3d3",
            warn: "#ff0000",
        };
        this.themeUtil.initTheme(this.theme.primary, this.theme.accent, this.theme.warn);
    }
    updatePrimary() {
        this.themeUtil.setPrimaryPalette(this.theme.primary);
    }
    updateAccent() {
        this.themeUtil.setAccentPalette(this.theme.accent);
    }
    updateWarn() {
        this.themeUtil.setWarnPalette(this.theme.warn);
    }
};
AppComponent.ctorParameters = () => [
    { type: _dist_material_theme_util__WEBPACK_IMPORTED_MODULE_4__["ThemeUtilService"] }
];
AppComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-root",
        template: _raw_loader_app_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_app_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], AppComponent);



/***/ }),

/***/ "VzVu":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div #THEME_CONTAINER>\n  <mat-toolbar color=\"primary\"> PRIMARY! </mat-toolbar>\n  <mat-toolbar color=\"accent\"> ACCENT! </mat-toolbar>\n  <mat-toolbar color=\"warn\"> WARN! </mat-toolbar>\n\n  <section class=\"margin1\">\n    <div class=\"mat-h1\">\n      Built-in Color Pickers\n    </div>\n    <mat-palette-picker [(ngModel)]=\"theme\"></mat-palette-picker>\n  </section>\n\n  <section class=\"margin1\">\n    <div class=\"mat-h1\">\n      Client Defined Pickers\n    </div>\n    <div>\n      <input type=\"color\" #pPicker (change)=\"theme.primary = pPicker.value; updatePrimary()\" [value]=\"theme.primary\" />\n      {{ theme.primary }}\n    </div>\n    <div>\n      <input type=\"color\" #aPicker (change)=\"theme.accent = aPicker.value; updateAccent()\" [value]=\"theme.accent\" />\n      {{ theme.accent }}\n    </div>\n    <div>\n      <input type=\"color\" #wPicker (change)=\"theme.warn = wPicker.value; updateWarn()\" [value]=\"theme.warn\" />\n      {{ theme.warn }}\n    </div>\n  </section>\n</div>\n");

/***/ }),

/***/ "ZAI4":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/toolbar */ "/t3+");
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/button */ "bTqV");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./app.component */ "Sy1n");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _dist_material_theme_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../dist/material-theme-util */ "vl/N");









let AppModule = class AppModule {
};
AppModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
        declarations: [_app_component__WEBPACK_IMPORTED_MODULE_6__["AppComponent"]],
        imports: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _dist_material_theme_util__WEBPACK_IMPORTED_MODULE_8__["ThemeUtilModule"],
            _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_3__["MatToolbarModule"],
            _angular_material_button__WEBPACK_IMPORTED_MODULE_4__["MatButtonModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__["BrowserAnimationsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
        ],
        providers: [_dist_material_theme_util__WEBPACK_IMPORTED_MODULE_8__["ThemeUtilService"]],
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_6__["AppComponent"]],
    })
], AppModule);



/***/ }),

/***/ "vl/N":
/*!******************************************************************!*\
  !*** ./dist/material-theme-util/fesm2015/material-theme-util.js ***!
  \******************************************************************/
/*! exports provided: BaseTheme, ColorPickerComponent, PalettePickerComponent, ThemeUtilModule, ThemeUtilService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseTheme", function() { return BaseTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorPickerComponent", function() { return ColorPickerComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PalettePickerComponent", function() { return PalettePickerComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThemeUtilModule", function() { return ThemeUtilModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThemeUtilService", function() { return ThemeUtilService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");





class Hex {
    constructor(str) {
        this.str = str;
    }
    parse() {
        return this.str;
    }
}
class HSL {
    constructor(h, s, l) {
        this.h = h;
        this.s = s;
        this.l = l;
    }
    parse() {
        return `hsl(${this.h}, ${this.s}, ${this.l})`;
    }
}
class RGB {
    constructor(r, g, b) {
        this.r = r;
        this.g = g;
        this.b = b;
    }
    parse() {
        return `rgb(${this.r}, ${this.g}, ${this.b})`;
    }
}

// Color Utility functions had to be exported to their
const REGEX = {
    HEX: {
        PARSE: /^#?([a-fA-F0-9]{1,2})([a-fA-F0-9]{1,2})([a-fA-F0-9]{1,2})$/i,
        TEST: `^#?(([a-fA-F0-9]{2}){3}|([a-fA-F0-9]{1}){3})$`
    }
};
/*
RGB Utilities
=====================================================
=====================================================
*/
const rgb2Hex = (rgb) => {
    const parseHex = v => {
        const hex = v.toString(16);
        return hex.length === 1 ? `0${hex}` : hex;
    };
    const _r = parseHex(rgb.r);
    const _g = parseHex(rgb.g);
    const _b = parseHex(rgb.b);
    return new Hex(`#${_r}${_g}${_b}`);
};
const rgb2Hsl = (rgb) => {
    let h = 0, s = 0, l = 0;
    // Make r, g, and b fractions of 1
    const _r = (rgb.r /= 255);
    const _g = (rgb.g /= 255);
    const _b = (rgb.b /= 255);
    // Find greatest and smallest channel values
    const cmin = Math.min(_r, _g, _b), cmax = Math.max(_r, _g, _b), delta = cmax - cmin;
    if (delta == 0)
        h = 0;
    // Red is max
    else if (cmax == _r)
        h = ((_g - _b) / delta) % 6;
    // Green is max
    else if (cmax == _g)
        h = (_b - _r) / delta + 2;
    // Blue is max
    else
        h = (_r - _g) / delta + 4;
    h = Math.round(h * 60);
    // Make negative hues positive behind 360°
    if (h < 0)
        h += 360;
    // Calculate lightness
    l = (cmax + cmin) / 2;
    // Calculate saturation
    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));
    // Multiply l and s by 100
    s = +(s * 100).toFixed(1);
    l = +(l * 100).toFixed(1);
    return new HSL(h, s, l);
};
const ParseRGB = {
    HEX: rgb2Hex,
    HSL: rgb2Hsl
};
/*
HEX Utilities
=====================================================
=====================================================
*/
const hex2RGB = (hex) => {
    let r, g, b;
    const result = REGEX.HEX.PARSE.exec(hex.parse());
    if (!!result) {
        r = parseInt(result[1], 16);
        g = parseInt(result[2], 16);
        b = parseInt(result[3], 16);
    }
    return new RGB(r, g, b);
};
const hex2Hsl = (hex) => {
    const rgb = hex2RGB(hex);
    return ParseRGB.HSL(rgb);
};
const testHex = str => {
    return new RegExp(REGEX.HEX.TEST).test(str);
};
const ParseHEX = {
    RGB: hex2RGB,
    HSL: hex2Hsl,
    TEST: testHex
};
/*
HSL Utilities
=====================================================
=====================================================
*/
const hsl2RGB = (hsl) => {
    // Must be fractions of 1
    const h = hsl.h;
    const s = hsl.s / 100;
    const l = hsl.l / 100;
    const c = (1 - Math.abs(2 * l - 1)) * s, x = c * (1 - Math.abs(((h / 60) % 2) - 1)), m = l - c / 2;
    let r = 0, g = 0, b = 0;
    if (0 <= h && h < 60) {
        r = c;
        g = x;
        b = 0;
    }
    else if (60 <= h && h < 120) {
        r = x;
        g = c;
        b = 0;
    }
    else if (120 <= h && h < 180) {
        r = 0;
        g = c;
        b = x;
    }
    else if (180 <= h && h < 240) {
        r = 0;
        g = x;
        b = c;
    }
    else if (240 <= h && h < 300) {
        r = x;
        g = 0;
        b = c;
    }
    else if (300 <= h && h < 360) {
        r = c;
        g = 0;
        b = x;
    }
    r = Math.round((r + m) * 255);
    g = Math.round((g + m) * 255);
    b = Math.round((b + m) * 255);
    return new RGB(r, g, b);
};
const hsl2Hex = (hsl) => {
    const rgb = hsl2RGB(hsl);
    return ParseRGB.HEX(rgb);
};
const ParseHSL = {
    RGB: hsl2RGB,
    HEX: hsl2Hex
};

var ColorType;
(function (ColorType) {
    ColorType["PRIMARY"] = "P";
    ColorType["ACCENT"] = "A";
    ColorType["WARN"] = "W";
})(ColorType || (ColorType = {}));
// Defines the types of ColorFormats
var ColorFormat;
(function (ColorFormat) {
    ColorFormat["HEX"] = "HEX";
    ColorFormat["RGB"] = "RGB";
    ColorFormat["HSL"] = "HSL";
})(ColorFormat || (ColorFormat = {}));
class Color {
    constructor(val) {
        if (!(val instanceof Hex) &&
            !(val instanceof RGB) &&
            !(val instanceof HSL)) {
            this.parseStr(val);
        }
        else {
            this.set(val);
        }
    }
    get RGB() {
        return this._rgb;
    }
    get HEX() {
        return this._hex;
    }
    get HSL() {
        return this._hsl;
    }
    get(type = ColorFormat.HEX) {
        if (type === ColorFormat.HEX) {
            return this.HEX;
        }
        else if (type === ColorFormat.RGB) {
            return this.RGB;
        }
        else if (type === ColorFormat.HSL) {
            return this.HSL;
        }
        else {
            throw `Invalid type for color.`;
        }
    }
    toStr(type = ColorFormat.HEX) {
        if (type === ColorFormat.HEX) {
            return this.HEX.parse();
        }
        else if (type === ColorFormat.RGB) {
            return this.RGB.parse();
        }
        else if (type === ColorFormat.HSL) {
            return this.HSL.parse();
        }
        else {
            throw `Invalid type for color.`;
        }
    }
    parseStr(str) {
        const validHex = ParseHEX.TEST(str);
        let _color;
        if (validHex) {
            _color = new Hex(str);
        }
        this.set(_color);
    }
    set(val) {
        if (val instanceof Hex) {
            this._hex = val;
            this._rgb = ParseHEX.RGB(val);
            this._hsl = ParseHEX.HSL(val);
        }
        else if (val instanceof RGB) {
            this._hex = ParseRGB.HEX(val);
            this._rgb = val;
            this._hsl = ParseRGB.HSL(val);
        }
        else if (val instanceof HSL) {
            this._hex = ParseHSL.HEX(val);
            this._rgb = ParseHSL.RGB(val);
            this._hsl = val;
        }
        else {
            throw `Invalid input format for color.`;
        }
    }
}

// Defines the public input type for the palette type.
var PaletteType;
(function (PaletteType) {
    PaletteType["P"] = "PRIMARY";
    PaletteType["A"] = "ACCENT";
    PaletteType["W"] = "WARN";
})(PaletteType || (PaletteType = {}));
class HueMap {
}
class PaletteModel {
    constructor(colorMap, type) {
        this.colorMap = colorMap;
        this.type = type;
        this.themeContainer = document.querySelector("body");
        // Assigns the value of the palette based on the
        // format and palette type (Primary, accent, warn)
        // @TODO Make the contrast more dynamic
        this.assignPalette = (format = ColorFormat.HEX) => {
            const t = this.paletteType;
            const themeEl = this.themeContainer;
            if (!!themeEl) {
                themeEl.style.setProperty(`--${t}-50`, this._50.toStr(format));
                themeEl.style.setProperty(`--${t}-100`, this._100.toStr(format));
                themeEl.style.setProperty(`--${t}-200`, this._200.toStr(format));
                themeEl.style.setProperty(`--${t}-300`, this._300.toStr(format));
                themeEl.style.setProperty(`--${t}-400`, this._400.toStr(format));
                themeEl.style.setProperty(`--${t}-500`, this._500.toStr(format));
                themeEl.style.setProperty(`--${t}-600`, this._600.toStr(format));
                themeEl.style.setProperty(`--${t}-700`, this._700.toStr(format));
                themeEl.style.setProperty(`--${t}-800`, this._800.toStr(format));
                themeEl.style.setProperty(`--${t}-900`, this._900.toStr(format));
                themeEl.style.setProperty(`--${t}-A100`, this._A100.toStr(format));
                themeEl.style.setProperty(`--${t}-A200`, this._A200.toStr(format));
                themeEl.style.setProperty(`--${t}-A400`, this._A400.toStr(format));
                themeEl.style.setProperty(`--${t}-A700`, this._A700.toStr(format));
            }
            else {
                throw `No body element found!`;
            }
        };
        // Sets Palette type (Primary/accent/warn)
        // if it exists
        if (!!this.type) {
            this.paletteType = type;
        }
        else {
            throw `No Palette type has been set.`;
        }
        // Sets ColorMap (Primary/accent/warn)
        // if it exists
        if (!!this.colorMap && this.colorMap.length > 0) {
            this.colorMap.map((v) => {
                this[`_${v.ref}`] = v.value;
            });
        }
        else {
            throw `Palette could not be generated.`;
        }
    }
}
class Palette {
    constructor(color, type) {
        this.color = color;
        this.type = type;
        this.buildPalette = () => {
            return this.generatePalette(this.color);
        };
        /*
         Generates a color palette given a single color.
      
         1. Color is parsed to HSL format
         2. Light (HS{L}) is altered for each Palette color
         3. Palette is generated with Color Objects (allowing for use in any color format)
      
        */
        this.generatePalette = (color) => {
            const _color = color.HSL;
            const h = Math.round(_color.h);
            const s = Math.round(_color.s);
            const l = Math.round(_color.l);
            if (isNaN(h) || isNaN(s) || isNaN(l)) {
                throw new TypeError("Invalid input");
            }
            if (h < 0 || h > 360) {
                throw new RangeError(`Hue must be an integer within [0, 360]; given ${h}%`);
            }
            if (s < 0 || s > 100) {
                throw new RangeError(`Saturation must be an integer within [0, 100]; given ${s}%`);
            }
            if (l < 0 || l > 100) {
                throw new RangeError(`Lightness must be an integer within [0, 100]; given ${l}`);
            }
            const hueMapset = this.generateAlterations(l).map((map) => {
                const _color = new Color(new HSL(h, s, map.value));
                return {
                    ref: map.ref,
                    value: _color,
                };
            });
            return new PaletteModel(hueMapset, this.type);
        };
        // Generates color palette based on the formula
        // provided by @leodido (https://github.com/leodido/material-palette)
        this.minimax = (val) => Math.min(100, Math.max(0, val));
        this.generateAlterations = (l) => [
            {
                ref: "50",
                value: this.minimax(l + 52),
            },
            {
                ref: "100",
                value: this.minimax(l + 37),
            },
            {
                ref: "200",
                value: this.minimax(l + 26),
            },
            {
                ref: "300",
                value: this.minimax(l + 12),
            },
            {
                ref: "400",
                value: this.minimax(l + 6),
            },
            {
                ref: "500",
                value: l,
            },
            {
                ref: "600",
                value: this.minimax(l - 6),
            },
            {
                ref: "700",
                value: this.minimax(l - 12),
            },
            {
                ref: "800",
                value: this.minimax(l - 18),
            },
            {
                ref: "900",
                value: this.minimax(l - 24),
            },
            {
                ref: "A100",
                value: this.minimax(l + 24),
            },
            {
                ref: "A200",
                value: this.minimax(l + 16),
            },
            {
                ref: "A400",
                value: this.minimax(l - 1),
            },
            {
                ref: "A700",
                value: this.minimax(l - 12),
            },
        ];
    }
}

// Default theme applied when none is provided
var DEFAULT_THEME;
(function (DEFAULT_THEME) {
    DEFAULT_THEME["PRIMARY"] = "#023057";
    DEFAULT_THEME["ACCENT"] = "#c1c5c8";
    DEFAULT_THEME["WARN"] = "#ff0000";
})(DEFAULT_THEME || (DEFAULT_THEME = {}));
// Color Theme Class for updating,
// managing the theme style
class Theme {
    constructor(p, a, w) {
        this.p = p;
        this.a = a;
        this.w = w;
        this.setPrimary(p);
        this.setAccent(a);
        this.setWarn(w);
    }
    setPrimary(color = DEFAULT_THEME.PRIMARY) {
        this.primary = new Color(color);
        this.buildPalette(this.primary, ColorType.PRIMARY);
    }
    setAccent(color = DEFAULT_THEME.ACCENT) {
        this.accent = new Color(color);
        this.buildPalette(this.accent, ColorType.ACCENT);
    }
    setWarn(color = DEFAULT_THEME.WARN) {
        this.warn = new Color(color);
        this.buildPalette(this.warn, ColorType.WARN);
    }
    buildPalette(color, type) {
        new Palette(color, type).buildPalette().assignPalette();
    }
}
// @TODO EXPERIMENTAL feature for
// applying other theme attributes
// ex. Font-family, border-radius, etc.
// class UIThemeMap<T> {
//   public name: string;
//   private value: T;
//   get = () => this.value;
//   set = (v: T) => (this.value = v);
// }
// @TODO EXPERIMENTAL feature for
// applying other theme attributes
// ex. Font-family, border-radius, etc.
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// export class Theme {
//   private themeContainer: any = document.querySelector("body");
//   private themeMap: UIThemeMap<any>[];
//   public colorTheme: ColorTheme;
//   setThemeMap(themeMap: UIThemeMap<any>[]): void {
//     this.themeMap = themeMap;
//     this.applyUITheme();
//   }
//   constructor(themeMap?: UIThemeMap<any>[], private basicTheme?: {p?: string, a?: string, w?: string}) {
//     if (!!themeMap) {
//       this.themeMap = themeMap;
//     } else {
//       this.themeMap = [];
//     }
//     if (!!basicTheme) {
//       this.colorTheme = new ColorTheme(this.basicTheme);
//     } else {
//       this.colorTheme = new ColorTheme();
//     }
//   }
//   // Applies theme properties IF they are applied via CSS Attributes
//   private applyUITheme(): void {
//     this.themeMap.map(_map => {
//       const ref = _map.name;
//       this.applyAttr(ref, _map.get());
//       return;
//     });
//   }
//   private applyAttr(ref: string, value: string): void {
//     if (!!ref) {
//       this.themeContainer.style.setProperty(`--${ref}`, `(${value})`);
//     }
//   }
// @TODO EXPERIMENTAL feature for
// applying other theme attributes
// ex. Font-family, border-radius, etc.
// private buildAttr<T>(name: string, val: T): UIThemeMap<T> {
//   const uiMap = new UIThemeMap<T>();
//   uiMap.set(val);
//   uiMap.name = name;
//   return uiMap;
// }
// }

class ThemeUtilService {
    initTheme(primary, accent, warn) {
        this.colorTheme = new Theme(primary, accent, warn);
    }
    setPrimaryPalette(str) {
        this.colorTheme.setPrimary(str);
    }
    setAccentPalette(str) {
        this.colorTheme.setAccent(str);
    }
    setWarnPalette(str) {
        this.colorTheme.setWarn(str);
    }
}
/** @nocollapse */ ThemeUtilService.ɵfac = function ThemeUtilService_Factory(t) { return new (t || ThemeUtilService)(); };
/** @nocollapse */ ThemeUtilService.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({ token: ThemeUtilService, factory: ThemeUtilService.ɵfac, providedIn: "root" });
/*@__PURE__*/ (function () { Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"])(ThemeUtilService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: "root",
            }]
    }], null, null); })();

class ColorPickerComponent {
    constructor() {
        this.regex = REGEX.HEX.TEST;
        this.parseHex = (v) => {
            if (v != null) {
                if (typeof v === "string") {
                    v = parseInt(v);
                }
                const hex = v.toString(16);
                return hex.length > 1 ? hex : `${hex}${hex}`;
            }
            return "FF";
        };
    }
    get hexColor() {
        const _r = this.parseHex(this.red);
        const _g = this.parseHex(this.green);
        const _b = this.parseHex(this.blue);
        this._hexColor = `${_r}${_g}${_b}`.toUpperCase();
        return this._hexColor;
    }
    set hexColor(str) {
        this._staging = str;
    }
    get rgb() {
        return `rgb(${this.red}, ${this.green}, ${this.blue})`;
    }
    setRGB() {
        setTimeout(() => {
            this.updateRGB(this._staging);
        }, 1500);
    }
    updateRGB(str) {
        const parse = (hex) => parseInt(hex, 16);
        const valid = new RegExp(REGEX.HEX.TEST).test(str);
        if (valid) {
            this._hexColor = str;
            const map = REGEX.HEX.PARSE.exec(str);
            this.red = parse(map[1]);
            this.green = parse(map[2]);
            this.blue = parse(map[3]);
        }
    }
    previewPalette() {
        this.onChg(this.hexColor);
    }
    writeValue(str) {
        this.updateRGB(str);
    }
    registerOnChange(fn) {
        this.onChg = (val) => {
            let hex = val;
            if (val.indexOf("#") === -1) {
                hex = `#${hex}`;
            }
            fn(hex);
        };
    }
    registerOnTouched(fn) { }
}
/** @nocollapse */ ColorPickerComponent.ɵfac = function ColorPickerComponent_Factory(t) { return new (t || ColorPickerComponent)(); };
/** @nocollapse */ ColorPickerComponent.ɵcmp = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"])({ type: ColorPickerComponent, selectors: [["app-color-picker"]], inputs: { paletteType: "paletteType" }, features: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"])([
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
                useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])((() => ColorPickerComponent)),
                multi: true,
            },
        ])], decls: 21, vars: 7, consts: [[1, "rgb-picker"], [1, "sliders"], [1, "mat-h2", "margin-unset"], [1, "red-slider", "short-slider"], ["type", "range", "max", "255", 3, "ngModel", "ngModelChange"], ["redSlider", ""], [1, "green-slider", "short-slider"], ["greenSlider", ""], [1, "blue-slider", "short-slider"], ["blueSlider", ""], [1, "hex-input-container"], ["type", "text", 1, "hex-input", 3, "ngModel", "ngModelChange", "keyup", "click"], ["hexInput", ""], [1, "preview-container"], [1, "color-preview"], ["type", "button", "mat-stroked-button", "", 3, "click"]], template: function ColorPickerComponent_Template(rf, ctx) { if (rf & 1) {
        const _r4 = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(0, "div", 0);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(1, "div", 1);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(2, "h2", 2);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"])(3);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(4, "div", 3);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(5, "input", 4, 5);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"])("ngModelChange", function ColorPickerComponent_Template_input_ngModelChange_5_listener($event) { return ctx.red = $event; });
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(7, "div", 6);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(8, "input", 4, 7);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"])("ngModelChange", function ColorPickerComponent_Template_input_ngModelChange_8_listener($event) { return ctx.green = $event; });
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(10, "div", 8);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(11, "input", 4, 9);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"])("ngModelChange", function ColorPickerComponent_Template_input_ngModelChange_11_listener($event) { return ctx.blue = $event; });
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(13, "div", 10);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"])(14, " # ");
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(15, "input", 11, 12);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"])("ngModelChange", function ColorPickerComponent_Template_input_ngModelChange_15_listener($event) { return ctx.hexColor = $event; })("keyup", function ColorPickerComponent_Template_input_keyup_15_listener() { return ctx.setRGB(); })("click", function ColorPickerComponent_Template_input_click_15_listener() { Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"])(_r4); const _r3 = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"])(16); _r3.focus(); return _r3.select(); });
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(17, "div", 13);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"])(18, "div", 14);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(19, "button", 15);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"])("click", function ColorPickerComponent_Template_button_click_19_listener() { return ctx.previewPalette(); });
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"])(20, " Preview ");
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
    } if (rf & 2) {
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"])(3);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"])(" ", ctx.paletteType, " ");
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"])(2);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"])("ngModel", ctx.red);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"])(3);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"])("ngModel", ctx.green);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"])(3);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"])("ngModel", ctx.blue);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"])(4);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"])("ngModel", ctx.hexColor);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"])(3);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"])("background-color", ctx.rgb);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["RangeValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgModel"]], styles: [".rgb-picker[_ngcontent-%COMP%]{border-radius:5px;box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12);display:grid;grid-column-gap:1rem;grid-template-columns:2fr auto;padding:16px;position:relative;transition:box-shadow .28s cubic-bezier(.4,0,.2,1)}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]{display:grid;grid-template-rows:repeat(4,minmax(auto 1fr));row-gap:1rem}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{background:#f30}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-thumb{background:#f30}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-thumb{background:#f30}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .red-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{background:#3c3}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-thumb{background:#3c3}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-thumb{background:#3c3}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .green-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{background:#369}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-webkit-slider-runnable-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-track{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-thumb{background:#369}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-thumb{background:#369}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .blue-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus::-ms-fill-upper{background:#cdcdcd}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]{-webkit-appearance:none;margin:0;padding:0;width:100%}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-runnable-track{border:none;height:3px;width:100%}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{-webkit-appearance:none;border:none;border-radius:50%;cursor:pointer;height:10px;margin-top:-4px;width:10px}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]:focus{outline:none}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-track{border:none;height:2px;width:100%}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-moz-range-thumb{border:none;border-radius:50%;cursor:pointer;height:10px;width:10px}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-lower, .rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-fill-upper{border-radius:10px}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-thumb{border:none;cursor:pointer;height:10px;margin-top:-1px;width:10x}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .short-slider[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-ms-track{background:transparent;border-color:transparent;border-width:2px 0;color:transparent;height:4px;overflow:visible;width:100%}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .hex-input-container[_ngcontent-%COMP%]{display:grid;grid-column-gap:3px;grid-template-columns:auto 1fr}.rgb-picker[_ngcontent-%COMP%]   .sliders[_ngcontent-%COMP%]   .hex-input-container[_ngcontent-%COMP%]   .hex-input[_ngcontent-%COMP%]{-webkit-animation-name:cdk-text-field-autofill-end;-webkit-appearance:none;-webkit-rtl-ordering:logical;-webkit-writing-mode:horizontal-tb!important;animation-name:cdk-text-field-autofill-end;background:0 0;background-color:#fff;border-bottom:1px solid grey;border-image-outset:0;border-image-repeat:initial;border-image-slice:100%;border-image-source:none;border-image-width:1;border-left-color:initial;border-left-style:none;border-left-width:medium;border-right-color:initial;border-right-style:none;border-right-width:medium;border-top-color:initial;border-top-style:none;border-top-width:medium;caret-color:var(--P-500);color:currentColor;cursor:text;display:inline-block;font:inherit;letter-spacing:normal;margin:0;max-width:100%;outline:0;padding:0 0 .25rem;text-align:inherit;text-indent:0;text-rendering:auto;text-shadow:none;text-transform:none;vertical-align:bottom;width:100%;word-spacing:normal}.rgb-picker[_ngcontent-%COMP%]   .preview-container[_ngcontent-%COMP%]{display:grid;grid-row-gap:1rem;grid-template-rows:1fr auto}.rgb-picker[_ngcontent-%COMP%]   .preview-container[_ngcontent-%COMP%]   .color-preview[_ngcontent-%COMP%]{border:1px solid #d3d3d3;border-radius:50%;height:75px;margin-top:.25rem;width:75px}"] });
/** @nocollapse */ ColorPickerComponent.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({ token: ColorPickerComponent, factory: ColorPickerComponent.ɵfac });
/*@__PURE__*/ (function () { Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"])(ColorPickerComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: "app-color-picker",
                templateUrl: "./color-picker.component.html",
                styleUrls: ["./color-picker.component.scss"],
                providers: [
                    {
                        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
                        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])((() => ColorPickerComponent)),
                        multi: true,
                    },
                ],
            }]
    }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
    }], null, { paletteType: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
            args: ["paletteType"]
        }] }); })();

class PalettePickerComponent {
    constructor(theme) {
        this.theme = theme;
    }
    get value() {
        return this.themeStr();
    }
    set value(v) {
        if (!!v && v !== this.themeStr()) {
            this.writeValue(v);
            this.chgFn(v);
        }
    }
    get primary() {
        return this._primary;
    }
    set primary(str) {
        this._primary = str;
        this.theme.setPrimaryPalette(str);
        this.updateTheme();
    }
    get accent() {
        return this._accent;
    }
    set accent(str) {
        this._accent = str;
        this.theme.setAccentPalette(str);
        this.updateTheme();
    }
    get warn() {
        return this._warn;
    }
    set warn(str) {
        this._warn = str;
        this.theme.setWarnPalette(str);
        this.updateTheme();
    }
    updateTheme() {
        this.chgFn(this.themeStr());
    }
    themeStr() {
        const theme = {
            primary: this._primary,
            accent: this._accent,
            warn: this._warn
        };
        return new BaseTheme(theme);
    }
    writeValue(str) {
        this.isObjectInput = typeof str === "object";
        const theme = new BaseTheme(str);
        this._primary = theme.primary;
        this._accent = theme.accent;
        this._warn = theme.warn;
    }
    registerOnChange(fn) {
        // Intercept the chgFn to return the type received initially
        this.chgFn = val => {
            const obj = this.isObjectInput ? val : JSON.stringify(val);
            fn(obj);
        };
    }
    registerOnTouched(fn) { }
    get colorCode() {
        return this._colorCode;
    }
}
/** @nocollapse */ PalettePickerComponent.ɵfac = function PalettePickerComponent_Factory(t) { return new (t || PalettePickerComponent)(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"])(ThemeUtilService)); };
/** @nocollapse */ PalettePickerComponent.ɵcmp = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"])({ type: PalettePickerComponent, selectors: [["mat-palette-picker"]], inputs: { colorCode: "colorCode" }, features: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"])([
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
                useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])((() => PalettePickerComponent)),
                multi: true
            }
        ])], decls: 4, vars: 3, consts: [[1, "col3-xl", "col3-lg", "col3-md", "col2-sm", "col2-xs"], ["paletteType", "Primary", 3, "ngModel", "ngModelChange"], ["paletteType", "Accent", 3, "ngModel", "ngModelChange"], ["paletteType", "Warn", 3, "ngModel", "ngModelChange"]], template: function PalettePickerComponent_Template(rf, ctx) { if (rf & 1) {
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(0, "div", 0);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(1, "app-color-picker", 1);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"])("ngModelChange", function PalettePickerComponent_Template_app_color_picker_ngModelChange_1_listener($event) { return ctx.primary = $event; });
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(2, "app-color-picker", 2);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"])("ngModelChange", function PalettePickerComponent_Template_app_color_picker_ngModelChange_2_listener($event) { return ctx.accent = $event; });
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"])(3, "app-color-picker", 3);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"])("ngModelChange", function PalettePickerComponent_Template_app_color_picker_ngModelChange_3_listener($event) { return ctx.warn = $event; });
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"])();
    } if (rf & 2) {
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"])(1);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"])("ngModel", ctx.primary);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"])(1);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"])("ngModel", ctx.accent);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"])(1);
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"])("ngModel", ctx.warn);
    } }, directives: [ColorPickerComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgModel"]], encapsulation: 2 });
/*@__PURE__*/ (function () { Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"])(PalettePickerComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: "mat-palette-picker",
                templateUrl: "./palette-picker.component.html",
                styleUrls: [],
                providers: [
                    {
                        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
                        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])((() => PalettePickerComponent)),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ThemeUtilService }]; }, { colorCode: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
            args: ["colorCode"]
        }] }); })();
var DEFAULT;
(function (DEFAULT) {
    DEFAULT["P"] = "#D3D3D3";
    DEFAULT["A"] = "#5D5D5D";
    DEFAULT["W"] = "#ff0000";
})(DEFAULT || (DEFAULT = {}));
class BaseTheme {
    constructor(obj) {
        this.primary = DEFAULT.P;
        this.accent = DEFAULT.A;
        this.warn = DEFAULT.W;
        if (!!obj) {
            if (typeof obj === "string") {
                this.parseObj(JSON.parse(obj));
            }
            else {
                this.parseObj(obj);
            }
        }
    }
    parseObj(obj) {
        if (!!obj) {
            this.primary = obj.primary ? obj.primary : DEFAULT.P;
            this.accent = obj.accent ? obj.accent : DEFAULT.A;
            this.warn = obj.warn ? obj.warn : DEFAULT.W;
        }
    }
}

class ThemeUtilModule {
}
/** @nocollapse */ ThemeUtilModule.ɵmod = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"])({ type: ThemeUtilModule });
/** @nocollapse */ ThemeUtilModule.ɵinj = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"])({ factory: function ThemeUtilModule_Factory(t) { return new (t || ThemeUtilModule)(); }, imports: [[
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormsModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["BrowserModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ReactiveFormsModule"],
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"])(ThemeUtilModule, { declarations: [PalettePickerComponent, ColorPickerComponent], imports: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormsModule"],
        _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["BrowserModule"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ReactiveFormsModule"]], exports: [PalettePickerComponent, ColorPickerComponent] }); })();
/*@__PURE__*/ (function () { Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"])(ThemeUtilModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                declarations: [PalettePickerComponent, ColorPickerComponent],
                imports: [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormsModule"],
                    _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"],
                    _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["BrowserModule"],
                    _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ReactiveFormsModule"],
                ],
                exports: [PalettePickerComponent, ColorPickerComponent],
            }]
    }], null, null); })();

/*
 * Public API Surface of theme-util
 */

/**
 * Generated bundle index. Do not edit.
 */


//# sourceMappingURL=material-theme-util.js.map


/***/ }),

/***/ "zUnb":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "a3Wg");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "ZAI4");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "AytR");
/* harmony import */ var zone_js_dist_zone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zone.js/dist/zone */ "pDpN");
/* harmony import */ var zone_js_dist_zone__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(zone_js_dist_zone__WEBPACK_IMPORTED_MODULE_4__);




if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])()
    .bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(err => console.log(err));
/***************************************************************************************************
 * Zone JS is required by default for Angular change detection
 */



/***/ }),

/***/ "zn8P":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "zn8P";

/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main-es2015.js.map